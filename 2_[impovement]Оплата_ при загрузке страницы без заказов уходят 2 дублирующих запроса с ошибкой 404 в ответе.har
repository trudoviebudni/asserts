{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2024-05-09T16:00:58.822Z",
        "id": "page_2",
        "title": "https://qa.demoshopping.ru/payment",
        "pageTimings": {
          "onContentLoad": 3471.10099999918,
          "onLoad": 3471.6689999986556
        }
      }
    ],
    "entries": [
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "13836",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/payment",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "none"
            },
            {
              "name": "Sec-Fetch-User",
              "value": "?1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 716,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"1580-18f433a42df\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 04 May 2024 10:50:42 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5504,
            "mimeType": "text/html",
            "compression": 3753,
            "text": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InJ1Ij4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgogICAgPG1ldGEgbmFtZT0icmVmZXJyZXIiIGNvbnRlbnQ9Im5vLXJlZmVycmVyLXdoZW4tZG93bmdyYWRlIiAvPgogICAgPHRpdGxlPtCY0L3RgtC10YDQvdC10YIt0LzQsNCz0LDQt9C40L08L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi9jc3Mvc3R5bGVzLmNzcyIgLz4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aGVhZGVyPgogICAgICA8bmF2PgogICAgICAgIDxhIGhyZWY9Ii8iPtCa0LDRgtCw0LvQvtCzPC9hPgogICAgICAgIDxhIGhyZWY9Ii9hYm91dCI+0J4g0LrQvtC80L/QsNC90LjQuDwvYT4KICAgICAgICA8YSBocmVmPSIvY29udGFjdHMiPtCa0L7QvdGC0LDQutGC0Ys8L2E+CiAgICAgICAgPGEgaHJlZj0iL2NhcnQiIGNsYXNzPSJhdXRoLWRlcGVuZGVudCI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FydC1pY29uIj7wn5uSPC9zcGFuPgogICAgICAgICAg0JrQvtGA0LfQuNC90LAKICAgICAgICA8L2E+CiAgICAgICAgPHNwYW4gaWQ9ImNhcnQtY291bnQiIGNsYXNzPSJhdXRoLWRlcGVuZGVudCI+KDApPC9zcGFuPgogICAgICAgIDxhIGhyZWY9Ii9wYXltZW50IiBjbGFzcz0iYXV0aC1kZXBlbmRlbnQiPtCe0L/Qu9Cw0YLQsDwvYT4KICAgICAgICA8YSBocmVmPSIvaGlzdG9yeSIgY2xhc3M9ImF1dGgtZGVwZW5kZW50Ij7QmNGB0YLQvtGA0LjRjyDQt9Cw0LrQsNC30L7QsjwvYT4KICAgICAgICA8YnV0dG9uIGlkPSJsb2dpbi1idXR0b24iIG9uY2xpY2s9IndpbmRvdy5sb2NhdGlvbi5ocmVmPScvbG9naW4nIj4KICAgICAgICAgINCg0LXQs9C40YHRgtGA0LDRhtC40Y8gLyDQktC+0LnRgtC4CiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGJ1dHRvbiBpZD0ibG9nb3V0LWJ1dHRvbiIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPtCS0YvQudGC0Lg8L2J1dHRvbj4KICAgICAgPC9uYXY+CiAgICA8L2hlYWRlcj4KCiAgICA8ZGl2IGNsYXNzPSJwYXltZW50LWZvcm0iPgogICAgICA8aDI+0J7Qv9C70LDRgtCwPC9oMj4KICAgICAgPGRpdiBpZD0ib3JkZXItaXRlbXMtbGlzdCI+CiAgICAgICAgPGgyPtCi0L7QstCw0YDRiyDQsiDQt9Cw0LrQsNC30LU8L2gyPgogICAgICAgIDwhLS0g0JfQtNC10YHRjCDQsdGD0LTRg9GCINC+0YLQvtCx0YDQsNC20LDRgtGM0YHRjyDRgtC+0LLQsNGA0YsgLS0+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGlkPSJvcmRlci1zdW1tYXJ5Ij4KICAgICAgICA8aDI+0KHRg9C80LzQsCDQt9Cw0LrQsNC30LA8L2gyPgogICAgICAgIDxwPtCe0LHRidCw0Y8g0YHRgtC+0LjQvNC+0YHRgtGMOiA8c3BhbiBpZD0idG90YWwtcHJpY2UiPjA8L3NwYW4+PC9wPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0ic2hpcHBpbmctZmVlIiBzdHlsZT0iZGlzcGxheTogbm9uZSI+CiAgICAgICAgPHA+0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L4gJDUg0LfQsCDQtNC+0YHRgtCw0LLQutGDPC9wPgogICAgICA8L2Rpdj4KICAgICAgPGZvcm0gaWQ9InBheW1lbnQtZm9ybSI+CiAgICAgICAgPGRpdiBjbGFzcz0icGF5bWVudC1tZXRob2QiPgogICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgID48aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9InBheW1lbnRNZXRob2QiIHZhbHVlPSJWSVNBIiBjaGVja2VkIC8+CiAgICAgICAgICAgIDxpbWcgc3JjPSIuLi9pbWFnZXMvdmlzYS5wbmciIGFsdD0iVmlzYSIgY2xhc3M9InBheW1lbnQtbG9nbyIKICAgICAgICAgIC8+PC9sYWJlbD4KICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICA+PGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJwYXltZW50TWV0aG9kIiB2YWx1ZT0iTWFzdGVyQ2FyZCIgLz4KICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgIHNyYz0iLi4vaW1hZ2VzL21hc3RlcmNhcmQucG5nIgogICAgICAgICAgICAgIGFsdD0iTWFzdGVyQ2FyZCIKICAgICAgICAgICAgICBjbGFzcz0icGF5bWVudC1sb2dvIgogICAgICAgICAgLz48L2xhYmVsPgogICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgID48aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9InBheW1lbnRNZXRob2QiIHZhbHVlPSJQYXlwYWwiIC8+CiAgICAgICAgICAgIDxpbWcgc3JjPSIuLi9pbWFnZXMvcGF5cGFsLnBuZyIgYWx0PSJQYXlwYWwiIGNsYXNzPSJwYXltZW50LWxvZ28iCiAgICAgICAgICAvPjwvbGFiZWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0iY2FyZC1kZXRhaWxzIj4KICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICBpZD0iY2FyZC1udW1iZXIiCiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLQndC+0LzQtdGAINC60LDRgNGC0YsiCiAgICAgICAgICAgIG1heGxlbmd0aD0iMTYiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+PC9kaXY+CiAgICAgICAgICA8IS0tINCU0L7QsdCw0LLQu9GP0LXQvCDRgdC+0L7QsdGJ0LXQvdC40LUg0L7QsSDQvtGI0LjQsdC60LUg0LTQu9GPINC90L7QvNC10YDQsCDQutCw0YDRgtGLIC0tPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJjYXJkLW5hbWUiIHBsYWNlaG9sZGVyPSLQmNC80Y8iIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvci1tZXNzYWdlIj48L2Rpdj4KICAgICAgICAgIDwhLS0g0JTQvtCx0LDQstC70Y/QtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtSDQtNC70Y8g0LjQvNC10L3QuCAtLT4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iY2FyZC1zdXJuYW1lIiBwbGFjZWhvbGRlcj0i0KTQsNC80LjQu9C40Y8iIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvci1tZXNzYWdlIj48L2Rpdj4KICAgICAgICAgIDwhLS0g0JTQvtCx0LDQstC70Y/QtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtSDQtNC70Y8g0YTQsNC80LjQu9C40LggLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJleHBpcnktZGF0ZSI+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgaWQ9ImNhcmQtZXhwaXJ5LW1vbnRoIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLQnNCcIgogICAgICAgICAgICAgIG1heGxlbmd0aD0iMiIKICAgICAgICAgICAgLz4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+PC9kaXY+CiAgICAgICAgICAgIDwhLS0g0JTQvtCx0LDQstC70Y/QtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtSDQtNC70Y8g0LzQtdGB0Y/RhtCwIC0tPgogICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgIGlkPSJjYXJkLWV4cGlyeS15ZWFyIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLQk9CTIgogICAgICAgICAgICAgIG1heGxlbmd0aD0iMiIKICAgICAgICAgICAgLz4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+PC9kaXY+CiAgICAgICAgICAgIDwhLS0g0JTQvtCx0LDQstC70Y/QtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtSDQtNC70Y8g0LPQvtC00LAgLS0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iY2FyZC1jdnYiIHBsYWNlaG9sZGVyPSJDVlYiIG1heGxlbmd0aD0iMyIgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLW1lc3NhZ2UiPjwvZGl2PgogICAgICAgICAgPCEtLSDQlNC+0LHQsNCy0LvRj9C10Lwg0YHQvtC+0LHRidC10L3QuNC1INC+0LEg0L7RiNC40LHQutC1INC00LvRjyBDVlYgLS0+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0icGF5cGFsLWVtYWlsIiBzdHlsZT0iZGlzcGxheTogbm9uZSI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iZW1haWwiCiAgICAgICAgICAgIGlkPSJwYXlwYWwtZW1haWwtaW5wdXQiCiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbWFpbCDQtNC70Y8gUGF5UGFsIgogICAgICAgICAgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLW1lc3NhZ2UiPjwvZGl2PgogICAgICAgICAgPCEtLSDQlNC+0LHQsNCy0LvRj9C10Lwg0YHQvtC+0LHRidC10L3QuNC1INC+0LEg0L7RiNC40LHQutC1INC00LvRjyBlbWFpbCBQYXlQYWwgLS0+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGlucHV0CiAgICAgICAgICB0eXBlPSJlbWFpbCIKICAgICAgICAgIGlkPSJyZWNlaXB0LWVtYWlsIgogICAgICAgICAgcGxhY2Vob2xkZXI9IkVtYWlsINC00LvRjyDQvtGC0L/RgNCw0LLQutC4INGH0LXQutCwIgogICAgICAgIC8+CiAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+PC9kaXY+CiAgICAgICAgPCEtLSDQlNC+0LHQsNCy0LvRj9C10Lwg0YHQvtC+0LHRidC10L3QuNC1INC+0LEg0L7RiNC40LHQutC1INC00LvRjyBlbWFpbCDQvtGC0L/RgNCw0LLQutC4INGH0LXQutCwIC0tPgogICAgICAgIDxidXR0b24gaWQ9ImNoZWNrb3V0LWJ1dHRvbiIgdHlwZT0ic3VibWl0Ij7QntGE0L7RgNC80LjRgtGMINC30LDQutCw0Lc8L2J1dHRvbj4KICAgICAgPC9mb3JtPgogICAgICA8IS0tINCe0YLQvtCx0YDQsNC20LXQvdC40LUg0YHQvtC+0LHRidC10L3QuNC5INC+0LEg0L7RiNC40LHQutCw0YUgLS0+CiAgICAgIDxkaXYgaWQ9ImVycm9yLW1lc3NhZ2VzIj4KICAgICAgICA8cCBjbGFzcz0iZXJyb3ItbWVzc2FnZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPjwvcD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8Zm9vdGVyPgogICAgICA8YSBocmVmPSIvcG9saWN5Ij7Qn9C+0LvQuNGC0LjQutCwINC40YHQv9C+0LvRjNC30L7QstCw0L3QuNGPPC9hPgogICAgICA8cD4mY29weTsgMjAyNCDQmNC90YLQtdGA0L3QtdGCLdC80LDQs9Cw0LfQuNC9LiDQktGB0LUg0L/RgNCw0LLQsCDQt9Cw0YnQuNGJ0LXQvdGLLjwvcD4KICAgIDwvZm9vdGVyPgoKICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2F4aW9zL2Rpc3QvYXhpb3MubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQ+CiAgICAgIHdpbmRvdy5iYXNlVXJsID0gImh0dHBzOi8vcWEuZGVtb3Nob3BwaW5nLnJ1IjsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4uL2pzL2dlbmVyYWwuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4uL2pzL2F1dGhDaGVjay5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iLi4vanMvY2FydC1jb3VudGVyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuLi9qcy9sb2dpbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iLi4vanMvYXBwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuLi9qcy9vcmRlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4uL2pzL3BheW1lbnQuanMiPjwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo=",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 366,
          "bodySize": 1751,
          "_transferSize": 2117,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.821Z",
        "time": 26.29499999966356,
        "timings": {
          "blocked": 1.6980000016989654,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08599999999999997,
          "wait": 24.094999999014895,
          "receive": 0.41599999894970097,
          "_blocked_queueing": 0.7680000016989652
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 6
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "connection": "13836",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/css/styles.css",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 604,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "17561"
            },
            {
              "name": "Content-Type",
              "value": "text/css; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"4499-18e91948bb4\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:56:55 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 17561,
            "mimeType": "text/css",
            "compression": 0,
            "text": "body {\n  font-family: 'Roboto', sans-serif;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #f4f4f4; /* Светлый фон для всей страницы */\n}\n\nheader {\n  background-color: #333;\n  color: white;\n  padding: 10px 20px;\n  display: flex;\n  justify-content: center; /* Центрирование всего содержимого header */\n  align-items: center;\n}\n\nheader nav {\n  display: flex;\n  align-items: center;\n  justify-content: center; /* Центрирование элементов навигации */\n  gap: 10px; /* Устанавливаем интервал между элементами */\n  flex-wrap: wrap; /* Перенос элементов на новую строку при нехватке места */\n}\n\nheader nav a {\n  color: white;\n  text-decoration: none;\n  padding: 5px 10px;\n  transition: background-color 0.3s;\n}\n\nheader nav a:hover {\n  background-color: #555;\n  border-radius: 5px;\n}\n\n#login-button {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  margin-left: auto; /* Помещаем кнопку в конец навигационной панели */\n}\n\n#login-button:hover {\n  background-color: #45a049;\n}\n\nfooter a {\n  color: white; /* Цвет текста */\n  text-decoration: none; /* Убрать подчеркивание */\n  padding: 10px 15px; /* Добавить отступ для ссылки */\n}\n\nfooter a:hover {\n  text-decoration: underline; /* Подчеркивание при наведении */\n}\n\n\n#pagination-container {\n  display: flex;\n  justify-content: center; /* Центрирование контейнера */\n  margin-top: 20px;\n  margin-bottom: 20px; /* Добавляем отступ снизу */\n}\n\n#pagination {\n  display: inline-flex; /* Сделать контейнер кнопок inline-flex для предотвращения растягивания */\n  gap: 10px; /* Добавление пространства между кнопками */\n}\n\n#pagination button {\n  padding: 5px 10px; /* Паддинг для кнопок */\n  min-width: 30px; /* Минимальная ширина для каждой кнопки */\n  text-align: center; /* Центрирование текста внутри кнопок */\n  background-color: #4CAF50; /* Цвет фона */\n  color: white; /* Цвет текста */\n  border: none; /* Удаление рамки */\n  border-radius: 5px; /* Скругление углов */\n  cursor: pointer; /* Стиль курсора */\n  transition: background-color 0.3s; /* Плавное изменение фона при наведении */\n}\n\n#pagination button:hover {\n  background-color: #45a049; /* Цвет фона при наведении */\n}\n\n.container {\n  display: flex;\n  flex: 1;\n  padding: 20px;\n}\n\n#filters {\n  flex-basis: 25%; /* Занимает одну четвертую страницы */\n  padding-right: 20px;\n  border-right: 1px solid #ddd;\n  margin-right: 20px;\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n}\n\n#filters button {\n  padding: 10px 15px; /* Увеличение паддинга для кнопок */\n  margin: 5px 10px 5px 0; /* Добавление отступа справа и сверху */\n  background-color: #4CAF50; /* Цвет фона */\n  color: white; /* Цвет текста */\n  border: none; /* Удаление рамки */\n  border-radius: 5px; /* Скругление углов */\n  cursor: pointer; /* Стиль курсора */\n  transition: background-color 0.3s; /* Плавное изменение фона при наведении */\n}\n\n#filters button:hover {\n  background-color: hsl(0, 0%, 100%); /* Цвет фона при наведении */\n}\n\n#product-list {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* По умолчанию две колонки */\n  gap: 20px;\n  justify-items: center;\n  align-content: start;\n  padding-bottom: 20px;\n}\n\n@media (max-width: 600px) { /* Например, для экранов меньше 600px */\n  #product-list {\n    grid-template-columns: 1fr; /* На маленьких экранах переходим на одну колонку */\n  }\n}\n\ninput[type=number], select {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\nfooter {\n  background-color: #333;\n  font-family: 'Arial', sans-serif;\n  color: white;\n  text-align: center;\n  padding: 10px 20px;\n  margin-top: auto;\n}\n\n.top-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 20px;\n  flex-wrap: wrap; /* Позволяет элементам переноситься на следующую строку */\n}\n\n.sorting-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 200px; /* Фиксированная ширина для контейнера сортировки */\n  margin-left: auto; /* Выравнивание контейнера сортировки по правому краю */\n  margin-right: 20px; /* Отступ справа для выравнивания с другими элементами */\n}\n\n/* Стили для контейнера аутентификации */\n.auth-container {\n  display: flex;\n  flex-direction: column; /* Выравниваем формы в столбец */\n  align-items: center; /* Центрируем формы по горизонтали */\n  padding: 20px;\n  gap: 20px; /* Добавляем пространство между формами */\n}\n\n/* Стили для форм логина и регистрации */\n#login-form, #register-form {\n  width: 100%; /* Формы теперь занимают всю доступную ширину контейнера */\n  max-width: 400px; /* Ограничиваем максимальную ширину форм */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* Стили для полей ввода в формах */\n#login-form input, #register-form input {\n  width: calc(100% - 40px); /* Учитываем padding формы */\n  margin: 10px 0; /* Отступы между полями */\n}\n\n/* Стили для кнопок в формах */\n#login-form button, #register-form button {\n  width: 80%; /* Увеличиваем ширину кнопок */\n  margin-top: 20px; /* Отступ сверху */\n}\n\n\n/* Новые стили для кнопок и форм */\ninput[type=\"text\"], input[type=\"password\"], input[type=\"number\"] {\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  width: 100%;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n}\n\ninput[type=\"checkbox\"] {\n  margin-right: 5px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\nbutton, input[type=\"submit\"] {\n  width: 100%;\n  padding: 10px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover, input[type=\"submit\"]:hover {\n  background-color: #45a049;\n}\n\n.orders-history {\nmargin-top: 20px;\n}\n\n.orders-history h1 {\nmargin-bottom: 20px;\n}\n\n#orders-table {\nwidth: 100%;\nborder-collapse: collapse;\n}\n\n#orders-table th,\n#orders-table td {\nborder: 1px solid #ddd;\npadding: 8px;\ntext-align: left;\n}\n\n#orders-table th {\nbackground-color: #f2f2f2;\n}\n\n#orders-table img {\nwidth: 50px;\nheight: auto;\n}\n\nh1 {\n  margin: 20px 0; /* Добавляем верхний и нижний отступы к заголовку */\n  text-align: center; /* Центрируем заголовок, если нужно */\n}\n\n#cart-total {\n  padding: 10px; /* Добавляем паддинг для внутреннего пространства */\n  margin: 20px 0; /* Добавляем верхний и нижний отступы */\n  background-color: #f5f5f5; /* Легкий фон, если необходим */\n  border-radius: 4px; /* Скругляем углы для эстетики */\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Небольшая тень для визуального выделения */\n  text-align: center; /* Центрируем текст общей суммы */\n}\n\n\n/* Стили для элементов корзины */\n#cart div {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  padding: 15px; /* Увеличиваем отступы для большего пространства */\n  margin-bottom: 15px; /* Увеличиваем отступ между элементами корзины */\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\n#cart div > * {\n  margin-right: 15px; /* Увеличиваем отступ справа для всех элементов */\n}\n\n#cart div > *:last-child {\n  margin-right: 0; /* Убираем отступ у последнего элемента */\n}\n\n#cart div > input[type='number'] {\n  width: 60px; /* Устанавливаем фиксированную ширину для поля ввода */\n}\n\n/* Стиль для кнопки \"Удалить\" */\n#cart div button {\n  padding: 5px; /* Уменьшаем паддинг */\n  margin: 0 5px; /* Уменьшаем отступ вокруг кнопки */\n  font-size: 14px; /* Меньший размер шрифта */\n  background-color: #36f446;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n#cart div button:hover {\n  background-color: #d32f2f;\n}\n\n/* Стиль для кнопки \"Оформить заказ\" */\n.checkout-btn {\n  padding: 10px 15px; /* Уменьшаем паддинг */\n  margin: 10px auto; /* Уменьшаем отступ сверху и снизу, автоматически выравниваем по центру */\n  display: block; /* Блочный тип позволит использовать margin auto для центрирования */\n  width: fit-content; /* Автоматическая ширина содержимого */\n  font-size: 16px; /* Адекватный размер шрифта */\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.checkout-btn:hover {\n  background-color: #45a049;\n}\n\n/* Дополнительно, можно добавить небольшой внешний отступ для всего блока корзины,\nчтобы элементы внутри не казались слишком прижатыми к краям */\n#cart {\n  margin: 20px; /* Добавляем немного внешнего пространства */\n}\n\n/* Стиль для поля изменения количества товаров */\n.quantity-input {\n  width: 60px; /* Достаточно для 3 символов */\n  text-align: center;\n}\n\n.payment-form {\n  margin: 20px; /* Добавляем отступы со всех сторон для формы оплаты */\n  background-color: #fff; /* Устанавливаем белый фон для формы */\n  padding: 20px; /* Добавляем внутренние отступы для формы */\n  border-radius: 5px; /* Скругляем углы формы */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Добавляем тень для формы */\n}\n\n.payment-form input[type=\"text\"],\n.payment-form input[type=\"number\"],\n.payment-form select,\n.payment-form input[type=\"email\"] {\n  width: 100%; /* Устанавливаем ширину полей на 100% */\n  padding: 10px; /* Добавляем паддинг для полей */\n  margin: 5px 0; /* Добавляем верхний и нижний отступы между полями */\n  border: 1px solid #ccc; /* Устанавливаем границу для полей */\n  border-radius: 4px; /* Скругляем углы полей */\n}\n\n.payment-form .error-message {\n  width: 100%; /* Устанавливаем ширину сообщения об ошибке равной ширине инпутов */\n  margin-top: 5px; /* Добавляем отступ сверху для сообщения об ошибке */\n  font-size: 0.9em; /* Уменьшаем размер шрифта для сообщения об ошибке */\n  color: #f44336; /* Устанавливаем красный цвет текста для сообщения об ошибке */\n  text-align: left; /* Выравниваем текст сообщения об ошибке по левому краю */\n}\n\n.payment-form button[type=\"submit\"] {\n  margin-top: 20px; /* Добавляем отступ сверху для кнопки */\n  width: auto; /* Возвращаем ширину кнопки к автоматической */\n  padding: 10px 20px; /* Устанавливаем паддинг для кнопки */\n}\n\n/* Дополнительные стили для выравнивания элементов внутри .payment-form */\n.payment-form > div, .payment-method {\n  margin-bottom: 10px; /* Добавляем отступ снизу между блоками в форме */\n}\n\n.payment-methods input[type=\"radio\"] {\n  transform: scale(0.8); /* Уменьшаем радиокнопки */\n  margin-right: 5px; /* Добавляем отступ справа от радиокнопки */\n}\n\n.payment-methods label {\n  display: inline-flex;\n  align-items: center;\n  margin-right: 15px; /* Добавляем отступ справа между методами оплаты */\n  cursor: pointer;\n}\n\n.payment-logo {\n  width: 80px; /* Уменьшаем размер логотипов методов оплаты */\n  height: auto; /* Автоматический подбор высоты для сохранения пропорций */\n  margin-left: 5px; /* Добавляем отступ слева от логотипа */\n}\n\n#order-items-list .order-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  padding: 15px;\n  margin-bottom: 15px;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\n#order-items-list .order-item p {\n  margin: 0 15px 0 0; /* Добавляем отступ справа для текста */\n  flex-grow: 1;\n}\n\n#order-items-list .order-item img {\n  width: 50px; /* Уточняем или корректируем размеры изображений, если необходимо */\n  height: auto;\n  margin-right: 15px; /* Отступ справа от изображения */\n}\n\n/* Стиль для кнопки \"Удалить\" в заказах */\n.order-item button {\n  padding: 5px 10px; /* Паддинг для кнопки, аналогично кнопке в корзине */\n  background-color: #f44336; /* Цвет фона кнопки \"Удалить\", такой же как в корзине */\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.order-item button:hover {\n  background-color: #d32f2f; /* Цвет при наведении, такой же как в корзине */\n}\n\n/* Стиль для элемента изменения количества товаров в заказах */\n.order-item input[type='number'] {\n  width: 60px; /* Ширина поля ввода, аналогично корзине */\n  padding: 5px; /* Паддинг для поля ввода */\n  text-align: center; /* Выравнивание текста по центру */\n  margin-right: 10px; /* Отступ справа, для отделения от других элементов */\n  border: 1px solid #ccc; /* Граница поля ввода */\n  border-radius: 4px; /* Скругление углов поля ввода */\n}\n/* Стили для блока суммы заказа */\n#order-summary {\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n#order-summary h2 {\n  margin-bottom: 10px;\n}\n\n#order-summary p {\n  font-size: 1.2em;\n}\n\n.orders-history {\n  margin: 20px; /* Добавляем отступы со всех сторон для раздела истории заказов */\n  background-color: #fff; /* Фоновый цвет, если нужно */\n  padding: 20px; /* Внутренние отступы для раздела */\n  border-radius: 5px; /* Скругляем углы */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Добавляем тень для лучшего визуального выделения */\n}\n\n#orders-table {\n  width: 100%; /* Подтверждаем, что таблица занимает всю доступную ширину */\n  margin: 20px 0; /* Добавляем верхний и нижний отступы для таблицы */\n}\n\n#orders-table th, #orders-table td {\n  padding: 10px; /* Увеличиваем внутренние отступы для ячеек таблицы */\n  text-align: left; /* Выравниваем текст внутри ячеек по левому краю */\n}\n\n#total-price {\n  font-weight: bold;\n}\n\n@keyframes fadeIn {\nfrom { opacity: 0; }\nto { opacity: 1; }\n}\n\n@keyframes fadeOut {\nfrom { opacity: 1; }\nto { opacity: 0; }\n}"
          },
          "redirectURL": "",
          "headersSize": 358,
          "bodySize": 17561,
          "_transferSize": 17919,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 52.63800000102492,
        "timings": {
          "blocked": 6.985999999954598,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06700000000000017,
          "wait": 45.0280000016808,
          "receive": 0.556999999389518,
          "_blocked_queueing": 3.169999999954598
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 46
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "13850",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/images/visa.png",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 651,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "37217"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"9161-18e5e8d5945\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 21 Mar 2024 01:08:25 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 37217,
            "mimeType": "image/png",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 344,
          "bodySize": 37217,
          "_transferSize": 37561,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 59.24400000003516,
        "timings": {
          "blocked": 7.4319999972537625,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08000000000000007,
          "wait": 49.20399999825005,
          "receive": 2.52800000453135,
          "_blocked_queueing": 4.644999997253763
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 53
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "13876",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/images/mastercard.png",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 657,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "76637"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"12b5d-18e5e8d5941\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 21 Mar 2024 01:08:25 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 76637,
            "mimeType": "image/png",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 345,
          "bodySize": 76637,
          "_transferSize": 76982,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 78.03200000125798,
        "timings": {
          "blocked": 8.07800000173552,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.03500000000000014,
          "wait": 52.278000000974394,
          "receive": 17.640999998548068,
          "_blocked_queueing": 4.62600000173552
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 57
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "13812",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/images/paypal.png",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 653,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "19042"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"4a62-18e5e8d5945\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 21 Mar 2024 01:08:25 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19042,
            "mimeType": "image/png",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 344,
          "bodySize": 19042,
          "_transferSize": 19386,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 58.716999999887776,
        "timings": {
          "blocked": 8.06399999911827,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.027000000000000135,
          "wait": 49.95299999848963,
          "receive": 0.6730000022798777,
          "_blocked_queueing": 4.67199999911827
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 125
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "14512",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "cdn.jsdelivr.net"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/npm/axios/dist/axios.min.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "age",
              "value": "5302"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=604800, s-maxage=43200"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "cf-ray",
              "value": "8812e8ea2da49d35-DME"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "15850"
            },
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"a209-1jEH0JEv2zh1MNXOLVEsko1z0SI\""
            },
            {
              "name": "nel",
              "value": "{\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=XGwSXgp%2FUqEJ4STFDqVM%2BdRYVUfigN2dURoeAv1CCApXwKDauE9ko0%2FANK3UCsYbe5fDJmmeY075vtYtXcVNCpglnT7KRCFRFShnLbat9F%2BMWhG6JJ46zWgxPKk9O%2FS9MSA%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-cache",
              "value": "HIT, HIT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-jsd-version",
              "value": "1.6.8"
            },
            {
              "name": "x-jsd-version-type",
              "value": "version"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra-etou8220107-FRA, cache-lga21965-LGA"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41481,
            "mimeType": "application/javascript",
            "text": "!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).axios=t()}(this,(function(){\"use strict\";function e(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function t(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?e(Object(n),!0).forEach((function(e){c(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):e(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function r(){r=function(){return t};var e,t={},n=Object.prototype,o=n.hasOwnProperty,i=Object.defineProperty||function(e,t,r){e[t]=r.value},a=\"function\"==typeof Symbol?Symbol:{},s=a.iterator||\"@@iterator\",u=a.asyncIterator||\"@@asyncIterator\",c=a.toStringTag||\"@@toStringTag\";function f(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},\"\")}catch(e){f=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var o=t&&t.prototype instanceof m?t:m,a=Object.create(o.prototype),s=new N(n||[]);return i(a,\"_invoke\",{value:A(e,r,s)}),a}function h(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"executing\",y=\"completed\",v={};function m(){}function g(){}function b(){}var w={};f(w,s,(function(){return this}));var E=Object.getPrototypeOf,O=E&&E(E(k([])));O&&O!==n&&o.call(O,s)&&(w=O);var S=b.prototype=m.prototype=Object.create(w);function j(e){[\"next\",\"throw\",\"return\"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function R(e,t){function r(n,i,a,s){var u=h(e[n],e,i);if(\"throw\"!==u.type){var c=u.arg,f=c.value;return f&&\"object\"==typeof f&&o.call(f,\"__await\")?t.resolve(f.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(f).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var n;i(this,\"_invoke\",{value:function(e,o){function i(){return new t((function(t,n){r(e,o,t,n)}))}return n=n?n.then(i,i):i()}})}function A(t,r,n){var o=p;return function(i,a){if(o===d)throw new Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=T(s,n);if(u){if(u===v)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=d;var c=h(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:\"suspendedYield\",c.arg===v)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function T(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,T(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),v;var i=h(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,v;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,v):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,v)}function x(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function N(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(x,this),this.reset(!0)}function k(t){if(t||\"\"===t){var r=t[s];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function r(){for(;++n<t.length;)if(o.call(t,n))return r.value=t[n],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(typeof t+\" is not iterable\")}return g.prototype=b,i(S,\"constructor\",{value:b,configurable:!0}),i(b,\"constructor\",{value:g,configurable:!0}),g.displayName=f(b,c,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,f(e,c,\"GeneratorFunction\")),e.prototype=Object.create(S),e},t.awrap=function(e){return{__await:e}},j(R.prototype),f(R.prototype,u,(function(){return this})),t.AsyncIterator=R,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new R(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},j(S),f(S,c,\"Generator\"),f(S,s,(function(){return this})),f(S,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=k,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&o.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return n(\"end\");if(a.tryLoc<=this.prev){var u=o.call(a,\"catchLoc\"),c=o.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!c)throw new Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&o.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var i=n;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,v):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw new Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:k(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),v}},t}function n(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}function o(e){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},o(e)}function i(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function s(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function u(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function c(e,t,r){return(t=n(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e,t){return h(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||d(e,t)||v()}function l(e){return function(e){if(Array.isArray(e))return y(e)}(e)||p(e)||d(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function h(e){if(Array.isArray(e))return e}function p(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}function d(e,t){if(e){if(\"string\"==typeof e)return y(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(e,t):void 0}}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function v(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function m(e,t){return function(){return e.apply(t,arguments)}}var g,b=Object.prototype.toString,w=Object.getPrototypeOf,E=(g=Object.create(null),function(e){var t=b.call(e);return g[t]||(g[t]=t.slice(8,-1).toLowerCase())}),O=function(e){return e=e.toLowerCase(),function(t){return E(t)===e}},S=function(e){return function(t){return o(t)===e}},j=Array.isArray,R=S(\"undefined\");var A=O(\"ArrayBuffer\");var T=S(\"string\"),x=S(\"function\"),P=S(\"number\"),N=function(e){return null!==e&&\"object\"===o(e)},k=function(e){if(\"object\"!==E(e))return!1;var t=w(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},_=O(\"Date\"),L=O(\"File\"),C=O(\"Blob\"),F=O(\"FileList\"),U=O(\"URLSearchParams\");function D(e,t){var r,n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=i.allOwnKeys,s=void 0!==a&&a;if(null!=e)if(\"object\"!==o(e)&&(e=[e]),j(e))for(r=0,n=e.length;r<n;r++)t.call(null,e[r],r,e);else{var u,c=s?Object.getOwnPropertyNames(e):Object.keys(e),f=c.length;for(r=0;r<f;r++)u=c[r],t.call(null,e[u],u,e)}}function B(e,t){t=t.toLowerCase();for(var r,n=Object.keys(e),o=n.length;o-- >0;)if(t===(r=n[o]).toLowerCase())return r;return null}var I=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:global,q=function(e){return!R(e)&&e!==I};var z,M=(z=\"undefined\"!=typeof Uint8Array&&w(Uint8Array),function(e){return z&&e instanceof z}),H=O(\"HTMLFormElement\"),J=function(e){var t=Object.prototype.hasOwnProperty;return function(e,r){return t.call(e,r)}}(),G=O(\"RegExp\"),W=function(e,t){var r=Object.getOwnPropertyDescriptors(e),n={};D(r,(function(r,o){var i;!1!==(i=t(r,o,e))&&(n[o]=i||r)})),Object.defineProperties(e,n)},K=\"abcdefghijklmnopqrstuvwxyz\",V=\"0123456789\",X={DIGIT:V,ALPHA:K,ALPHA_DIGIT:K+K.toUpperCase()+V};var $=O(\"AsyncFunction\"),Q={isArray:j,isArrayBuffer:A,isBuffer:function(e){return null!==e&&!R(e)&&null!==e.constructor&&!R(e.constructor)&&x(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:function(e){var t;return e&&(\"function\"==typeof FormData&&e instanceof FormData||x(e.append)&&(\"formdata\"===(t=E(e))||\"object\"===t&&x(e.toString)&&\"[object FormData]\"===e.toString()))},isArrayBufferView:function(e){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&A(e.buffer)},isString:T,isNumber:P,isBoolean:function(e){return!0===e||!1===e},isObject:N,isPlainObject:k,isUndefined:R,isDate:_,isFile:L,isBlob:C,isRegExp:G,isFunction:x,isStream:function(e){return N(e)&&x(e.pipe)},isURLSearchParams:U,isTypedArray:M,isFileList:F,forEach:D,merge:function e(){for(var t=q(this)&&this||{},r=t.caseless,n={},o=function(t,o){var i=r&&B(n,o)||o;k(n[i])&&k(t)?n[i]=e(n[i],t):k(t)?n[i]=e({},t):j(t)?n[i]=t.slice():n[i]=t},i=0,a=arguments.length;i<a;i++)arguments[i]&&D(arguments[i],o);return n},extend:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=n.allOwnKeys;return D(t,(function(t,n){r&&x(t)?e[n]=m(t,r):e[n]=t}),{allOwnKeys:o}),e},trim:function(e){return e.trim?e.trim():e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,r,n){e.prototype=Object.create(t.prototype,n),e.prototype.constructor=e,Object.defineProperty(e,\"super\",{value:t.prototype}),r&&Object.assign(e.prototype,r)},toFlatObject:function(e,t,r,n){var o,i,a,s={};if(t=t||{},null==e)return t;do{for(i=(o=Object.getOwnPropertyNames(e)).length;i-- >0;)a=o[i],n&&!n(a,e,t)||s[a]||(t[a]=e[a],s[a]=!0);e=!1!==r&&w(e)}while(e&&(!r||r(e,t))&&e!==Object.prototype);return t},kindOf:E,kindOfTest:O,endsWith:function(e,t,r){e=String(e),(void 0===r||r>e.length)&&(r=e.length),r-=t.length;var n=e.indexOf(t,r);return-1!==n&&n===r},toArray:function(e){if(!e)return null;if(j(e))return e;var t=e.length;if(!P(t))return null;for(var r=new Array(t);t-- >0;)r[t]=e[t];return r},forEachEntry:function(e,t){for(var r,n=(e&&e[Symbol.iterator]).call(e);(r=n.next())&&!r.done;){var o=r.value;t.call(e,o[0],o[1])}},matchAll:function(e,t){for(var r,n=[];null!==(r=e.exec(t));)n.push(r);return n},isHTMLForm:H,hasOwnProperty:J,hasOwnProp:J,reduceDescriptors:W,freezeMethods:function(e){W(e,(function(t,r){if(x(e)&&-1!==[\"arguments\",\"caller\",\"callee\"].indexOf(r))return!1;var n=e[r];x(n)&&(t.enumerable=!1,\"writable\"in t?t.writable=!1:t.set||(t.set=function(){throw Error(\"Can not rewrite read-only method '\"+r+\"'\")}))}))},toObjectSet:function(e,t){var r={},n=function(e){e.forEach((function(e){r[e]=!0}))};return j(e)?n(e):n(String(e).split(t)),r},toCamelCase:function(e){return e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(e,t,r){return t.toUpperCase()+r}))},noop:function(){},toFiniteNumber:function(e,t){return e=+e,Number.isFinite(e)?e:t},findKey:B,global:I,isContextDefined:q,ALPHABET:X,generateString:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:16,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:X.ALPHA_DIGIT,r=\"\",n=t.length;e--;)r+=t[Math.random()*n|0];return r},isSpecCompliantForm:function(e){return!!(e&&x(e.append)&&\"FormData\"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:function(e){var t=new Array(10);return function e(r,n){if(N(r)){if(t.indexOf(r)>=0)return;if(!(\"toJSON\"in r)){t[n]=r;var o=j(r)?[]:{};return D(r,(function(t,r){var i=e(t,n+1);!R(i)&&(o[r]=i)})),t[n]=void 0,o}}return r}(e,0)},isAsyncFn:$,isThenable:function(e){return e&&(N(e)||x(e))&&x(e.then)&&x(e.catch)}};function Y(e,t,r,n,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name=\"AxiosError\",t&&(this.code=t),r&&(this.config=r),n&&(this.request=n),o&&(this.response=o)}Q.inherits(Y,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:Q.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Z=Y.prototype,ee={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((function(e){ee[e]={value:e}})),Object.defineProperties(Y,ee),Object.defineProperty(Z,\"isAxiosError\",{value:!0}),Y.from=function(e,t,r,n,o,i){var a=Object.create(Z);return Q.toFlatObject(e,a,(function(e){return e!==Error.prototype}),(function(e){return\"isAxiosError\"!==e})),Y.call(a,e.message,t,r,n,o),a.cause=e,a.name=e.name,i&&Object.assign(a,i),a};function te(e){return Q.isPlainObject(e)||Q.isArray(e)}function re(e){return Q.endsWith(e,\"[]\")?e.slice(0,-2):e}function ne(e,t,r){return e?e.concat(t).map((function(e,t){return e=re(e),!r&&t?\"[\"+e+\"]\":e})).join(r?\".\":\"\"):t}var oe=Q.toFlatObject(Q,{},null,(function(e){return/^is[A-Z]/.test(e)}));function ie(e,t,r){if(!Q.isObject(e))throw new TypeError(\"target must be an object\");t=t||new FormData;var n=(r=Q.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!Q.isUndefined(t[e])}))).metaTokens,i=r.visitor||f,a=r.dots,s=r.indexes,u=(r.Blob||\"undefined\"!=typeof Blob&&Blob)&&Q.isSpecCompliantForm(t);if(!Q.isFunction(i))throw new TypeError(\"visitor must be a function\");function c(e){if(null===e)return\"\";if(Q.isDate(e))return e.toISOString();if(!u&&Q.isBlob(e))throw new Y(\"Blob is not supported. Use a Buffer instead.\");return Q.isArrayBuffer(e)||Q.isTypedArray(e)?u&&\"function\"==typeof Blob?new Blob([e]):Buffer.from(e):e}function f(e,r,i){var u=e;if(e&&!i&&\"object\"===o(e))if(Q.endsWith(r,\"{}\"))r=n?r:r.slice(0,-2),e=JSON.stringify(e);else if(Q.isArray(e)&&function(e){return Q.isArray(e)&&!e.some(te)}(e)||(Q.isFileList(e)||Q.endsWith(r,\"[]\"))&&(u=Q.toArray(e)))return r=re(r),u.forEach((function(e,n){!Q.isUndefined(e)&&null!==e&&t.append(!0===s?ne([r],n,a):null===s?r:r+\"[]\",c(e))})),!1;return!!te(e)||(t.append(ne(i,r,a),c(e)),!1)}var l=[],h=Object.assign(oe,{defaultVisitor:f,convertValue:c,isVisitable:te});if(!Q.isObject(e))throw new TypeError(\"data must be an object\");return function e(r,n){if(!Q.isUndefined(r)){if(-1!==l.indexOf(r))throw Error(\"Circular reference detected in \"+n.join(\".\"));l.push(r),Q.forEach(r,(function(r,o){!0===(!(Q.isUndefined(r)||null===r)&&i.call(t,r,Q.isString(o)?o.trim():o,n,h))&&e(r,n?n.concat(o):[o])})),l.pop()}}(e),t}function ae(e){var t={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function se(e,t){this._pairs=[],e&&ie(e,this,t)}var ue=se.prototype;function ce(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function fe(e,t,r){if(!t)return e;var n,o=r&&r.encode||ce,i=r&&r.serialize;if(n=i?i(t,r):Q.isURLSearchParams(t)?t.toString():new se(t,r).toString(o)){var a=e.indexOf(\"#\");-1!==a&&(e=e.slice(0,a)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+n}return e}ue.append=function(e,t){this._pairs.push([e,t])},ue.toString=function(e){var t=e?function(t){return e.call(this,t,ae)}:ae;return this._pairs.map((function(e){return t(e[0])+\"=\"+t(e[1])}),\"\").join(\"&\")};var le,he=function(){function e(){a(this,e),this.handlers=[]}return u(e,[{key:\"use\",value:function(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1}},{key:\"eject\",value:function(e){this.handlers[e]&&(this.handlers[e]=null)}},{key:\"clear\",value:function(){this.handlers&&(this.handlers=[])}},{key:\"forEach\",value:function(e){Q.forEach(this.handlers,(function(t){null!==t&&e(t)}))}}]),e}(),pe={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},de={isBrowser:!0,classes:{URLSearchParams:\"undefined\"!=typeof URLSearchParams?URLSearchParams:se,FormData:\"undefined\"!=typeof FormData?FormData:null,Blob:\"undefined\"!=typeof Blob?Blob:null},protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]},ye=\"undefined\"!=typeof window&&\"undefined\"!=typeof document,ve=(le=\"undefined\"!=typeof navigator&&navigator.product,ye&&[\"ReactNative\",\"NativeScript\",\"NS\"].indexOf(le)<0),me=\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&\"function\"==typeof self.importScripts,ge=t(t({},Object.freeze({__proto__:null,hasBrowserEnv:ye,hasStandardBrowserWebWorkerEnv:me,hasStandardBrowserEnv:ve})),de);function be(e){function t(e,r,n,o){var i=e[o++];if(\"__proto__\"===i)return!0;var a=Number.isFinite(+i),s=o>=e.length;return i=!i&&Q.isArray(n)?n.length:i,s?(Q.hasOwnProp(n,i)?n[i]=[n[i],r]:n[i]=r,!a):(n[i]&&Q.isObject(n[i])||(n[i]=[]),t(e,r,n[i],o)&&Q.isArray(n[i])&&(n[i]=function(e){var t,r,n={},o=Object.keys(e),i=o.length;for(t=0;t<i;t++)n[r=o[t]]=e[r];return n}(n[i])),!a)}if(Q.isFormData(e)&&Q.isFunction(e.entries)){var r={};return Q.forEachEntry(e,(function(e,n){t(function(e){return Q.matchAll(/\\w+|\\[(\\w*)]/g,e).map((function(e){return\"[]\"===e[0]?\"\":e[1]||e[0]}))}(e),n,r,0)})),r}return null}var we={transitional:pe,adapter:[\"xhr\",\"http\"],transformRequest:[function(e,t){var r,n=t.getContentType()||\"\",o=n.indexOf(\"application/json\")>-1,i=Q.isObject(e);if(i&&Q.isHTMLForm(e)&&(e=new FormData(e)),Q.isFormData(e))return o?JSON.stringify(be(e)):e;if(Q.isArrayBuffer(e)||Q.isBuffer(e)||Q.isStream(e)||Q.isFile(e)||Q.isBlob(e))return e;if(Q.isArrayBufferView(e))return e.buffer;if(Q.isURLSearchParams(e))return t.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),e.toString();if(i){if(n.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(e,t){return ie(e,new ge.classes.URLSearchParams,Object.assign({visitor:function(e,t,r,n){return ge.isNode&&Q.isBuffer(e)?(this.append(t,e.toString(\"base64\")),!1):n.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((r=Q.isFileList(e))||n.indexOf(\"multipart/form-data\")>-1){var a=this.env&&this.env.FormData;return ie(r?{\"files[]\":e}:e,a&&new a,this.formSerializer)}}return i||o?(t.setContentType(\"application/json\",!1),function(e,t,r){if(Q.isString(e))try{return(t||JSON.parse)(e),Q.trim(e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(r||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||we.transitional,r=t&&t.forcedJSONParsing,n=\"json\"===this.responseType;if(e&&Q.isString(e)&&(r&&!this.responseType||n)){var o=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(e){if(o){if(\"SyntaxError\"===e.name)throw Y.from(e,Y.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:ge.classes.FormData,Blob:ge.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":void 0}}};Q.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\"],(function(e){we.headers[e]={}}));var Ee=we,Oe=Q.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]),Se=Symbol(\"internals\");function je(e){return e&&String(e).trim().toLowerCase()}function Re(e){return!1===e||null==e?e:Q.isArray(e)?e.map(Re):String(e)}function Ae(e,t,r,n,o){return Q.isFunction(n)?n.call(this,t,r):(o&&(t=r),Q.isString(t)?Q.isString(n)?-1!==t.indexOf(n):Q.isRegExp(n)?n.test(t):void 0:void 0)}var Te=function(e,t){function r(e){a(this,r),e&&this.set(e)}return u(r,[{key:\"set\",value:function(e,t,r){var n=this;function o(e,t,r){var o=je(t);if(!o)throw new Error(\"header name must be a non-empty string\");var i=Q.findKey(n,o);(!i||void 0===n[i]||!0===r||void 0===r&&!1!==n[i])&&(n[i||t]=Re(e))}var i,a,s,u,c,f=function(e,t){return Q.forEach(e,(function(e,r){return o(e,r,t)}))};return Q.isPlainObject(e)||e instanceof this.constructor?f(e,t):Q.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim())?f((c={},(i=e)&&i.split(\"\\n\").forEach((function(e){u=e.indexOf(\":\"),a=e.substring(0,u).trim().toLowerCase(),s=e.substring(u+1).trim(),!a||c[a]&&Oe[a]||(\"set-cookie\"===a?c[a]?c[a].push(s):c[a]=[s]:c[a]=c[a]?c[a]+\", \"+s:s)})),c),t):null!=e&&o(t,e,r),this}},{key:\"get\",value:function(e,t){if(e=je(e)){var r=Q.findKey(this,e);if(r){var n=this[r];if(!t)return n;if(!0===t)return function(e){for(var t,r=Object.create(null),n=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;t=n.exec(e);)r[t[1]]=t[2];return r}(n);if(Q.isFunction(t))return t.call(this,n,r);if(Q.isRegExp(t))return t.exec(n);throw new TypeError(\"parser must be boolean|regexp|function\")}}}},{key:\"has\",value:function(e,t){if(e=je(e)){var r=Q.findKey(this,e);return!(!r||void 0===this[r]||t&&!Ae(0,this[r],r,t))}return!1}},{key:\"delete\",value:function(e,t){var r=this,n=!1;function o(e){if(e=je(e)){var o=Q.findKey(r,e);!o||t&&!Ae(0,r[o],o,t)||(delete r[o],n=!0)}}return Q.isArray(e)?e.forEach(o):o(e),n}},{key:\"clear\",value:function(e){for(var t=Object.keys(this),r=t.length,n=!1;r--;){var o=t[r];e&&!Ae(0,this[o],o,e,!0)||(delete this[o],n=!0)}return n}},{key:\"normalize\",value:function(e){var t=this,r={};return Q.forEach(this,(function(n,o){var i=Q.findKey(r,o);if(i)return t[i]=Re(n),void delete t[o];var a=e?function(e){return e.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(function(e,t,r){return t.toUpperCase()+r}))}(o):String(o).trim();a!==o&&delete t[o],t[a]=Re(n),r[a]=!0})),this}},{key:\"concat\",value:function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return(e=this.constructor).concat.apply(e,[this].concat(r))}},{key:\"toJSON\",value:function(e){var t=Object.create(null);return Q.forEach(this,(function(r,n){null!=r&&!1!==r&&(t[n]=e&&Q.isArray(r)?r.join(\", \"):r)})),t}},{key:Symbol.iterator,value:function(){return Object.entries(this.toJSON())[Symbol.iterator]()}},{key:\"toString\",value:function(){return Object.entries(this.toJSON()).map((function(e){var t=f(e,2);return t[0]+\": \"+t[1]})).join(\"\\n\")}},{key:Symbol.toStringTag,get:function(){return\"AxiosHeaders\"}}],[{key:\"from\",value:function(e){return e instanceof this?e:new this(e)}},{key:\"concat\",value:function(e){for(var t=new this(e),r=arguments.length,n=new Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];return n.forEach((function(e){return t.set(e)})),t}},{key:\"accessor\",value:function(e){var t=(this[Se]=this[Se]={accessors:{}}).accessors,r=this.prototype;function n(e){var n=je(e);t[n]||(!function(e,t){var r=Q.toCamelCase(\" \"+t);[\"get\",\"set\",\"has\"].forEach((function(n){Object.defineProperty(e,n+r,{value:function(e,r,o){return this[n].call(this,t,e,r,o)},configurable:!0})}))}(r,e),t[n]=!0)}return Q.isArray(e)?e.forEach(n):n(e),this}}]),r}();Te.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\",\"Authorization\"]),Q.reduceDescriptors(Te.prototype,(function(e,t){var r=e.value,n=t[0].toUpperCase()+t.slice(1);return{get:function(){return r},set:function(e){this[n]=e}}})),Q.freezeMethods(Te);var xe=Te;function Pe(e,t){var r=this||Ee,n=t||r,o=xe.from(n.headers),i=n.data;return Q.forEach(e,(function(e){i=e.call(r,i,o.normalize(),t?t.status:void 0)})),o.normalize(),i}function Ne(e){return!(!e||!e.__CANCEL__)}function ke(e,t,r){Y.call(this,null==e?\"canceled\":e,Y.ERR_CANCELED,t,r),this.name=\"CanceledError\"}Q.inherits(ke,Y,{__CANCEL__:!0});var _e=ge.hasStandardBrowserEnv?{write:function(e,t,r,n,o,i){var a=[e+\"=\"+encodeURIComponent(t)];Q.isNumber(r)&&a.push(\"expires=\"+new Date(r).toGMTString()),Q.isString(n)&&a.push(\"path=\"+n),Q.isString(o)&&a.push(\"domain=\"+o),!0===i&&a.push(\"secure\"),document.cookie=a.join(\"; \")},read:function(e){var t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function Le(e,t){return e&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(t)?function(e,t){return t?e.replace(/\\/?\\/$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e}(e,t):t}var Ce=ge.hasStandardBrowserEnv?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement(\"a\");function n(e){var n=e;return t&&(r.setAttribute(\"href\",n),n=r.href),r.setAttribute(\"href\",n),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,\"\"):\"\",host:r.host,search:r.search?r.search.replace(/^\\?/,\"\"):\"\",hash:r.hash?r.hash.replace(/^#/,\"\"):\"\",hostname:r.hostname,port:r.port,pathname:\"/\"===r.pathname.charAt(0)?r.pathname:\"/\"+r.pathname}}return e=n(window.location.href),function(t){var r=Q.isString(t)?n(t):t;return r.protocol===e.protocol&&r.host===e.host}}():function(){return!0};function Fe(e,t){var r=0,n=function(e,t){e=e||10;var r,n=new Array(e),o=new Array(e),i=0,a=0;return t=void 0!==t?t:1e3,function(s){var u=Date.now(),c=o[a];r||(r=u),n[i]=s,o[i]=u;for(var f=a,l=0;f!==i;)l+=n[f++],f%=e;if((i=(i+1)%e)===a&&(a=(a+1)%e),!(u-r<t)){var h=c&&u-c;return h?Math.round(1e3*l/h):void 0}}}(50,250);return function(o){var i=o.loaded,a=o.lengthComputable?o.total:void 0,s=i-r,u=n(s);r=i;var c={loaded:i,total:a,progress:a?i/a:void 0,bytes:s,rate:u||void 0,estimated:u&&a&&i<=a?(a-i)/u:void 0,event:o};c[t?\"download\":\"upload\"]=!0,e(c)}}var Ue={http:null,xhr:\"undefined\"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,r){var n,o,i,a=e.data,s=xe.from(e.headers).normalize(),u=e.responseType,c=e.withXSRFToken;function f(){e.cancelToken&&e.cancelToken.unsubscribe(n),e.signal&&e.signal.removeEventListener(\"abort\",n)}if(Q.isFormData(a))if(ge.hasStandardBrowserEnv||ge.hasStandardBrowserWebWorkerEnv)s.setContentType(!1);else if(!1!==(o=s.getContentType())){var y=o?o.split(\";\").map((function(e){return e.trim()})).filter(Boolean):[],m=h(i=y)||p(i)||d(i)||v(),g=m[0],b=m.slice(1);s.setContentType([g||\"multipart/form-data\"].concat(l(b)).join(\"; \"))}var w=new XMLHttpRequest;if(e.auth){var E=e.auth.username||\"\",O=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";s.set(\"Authorization\",\"Basic \"+btoa(E+\":\"+O))}var S=Le(e.baseURL,e.url);function j(){if(w){var n=xe.from(\"getAllResponseHeaders\"in w&&w.getAllResponseHeaders());!function(e,t,r){var n=r.config.validateStatus;r.status&&n&&!n(r.status)?t(new Y(\"Request failed with status code \"+r.status,[Y.ERR_BAD_REQUEST,Y.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r)):e(r)}((function(e){t(e),f()}),(function(e){r(e),f()}),{data:u&&\"text\"!==u&&\"json\"!==u?w.response:w.responseText,status:w.status,statusText:w.statusText,headers:n,config:e,request:w}),w=null}}if(w.open(e.method.toUpperCase(),fe(S,e.params,e.paramsSerializer),!0),w.timeout=e.timeout,\"onloadend\"in w?w.onloadend=j:w.onreadystatechange=function(){w&&4===w.readyState&&(0!==w.status||w.responseURL&&0===w.responseURL.indexOf(\"file:\"))&&setTimeout(j)},w.onabort=function(){w&&(r(new Y(\"Request aborted\",Y.ECONNABORTED,e,w)),w=null)},w.onerror=function(){r(new Y(\"Network Error\",Y.ERR_NETWORK,e,w)),w=null},w.ontimeout=function(){var t=e.timeout?\"timeout of \"+e.timeout+\"ms exceeded\":\"timeout exceeded\",n=e.transitional||pe;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),r(new Y(t,n.clarifyTimeoutError?Y.ETIMEDOUT:Y.ECONNABORTED,e,w)),w=null},ge.hasStandardBrowserEnv&&(c&&Q.isFunction(c)&&(c=c(e)),c||!1!==c&&Ce(S))){var R=e.xsrfHeaderName&&e.xsrfCookieName&&_e.read(e.xsrfCookieName);R&&s.set(e.xsrfHeaderName,R)}void 0===a&&s.setContentType(null),\"setRequestHeader\"in w&&Q.forEach(s.toJSON(),(function(e,t){w.setRequestHeader(t,e)})),Q.isUndefined(e.withCredentials)||(w.withCredentials=!!e.withCredentials),u&&\"json\"!==u&&(w.responseType=e.responseType),\"function\"==typeof e.onDownloadProgress&&w.addEventListener(\"progress\",Fe(e.onDownloadProgress,!0)),\"function\"==typeof e.onUploadProgress&&w.upload&&w.upload.addEventListener(\"progress\",Fe(e.onUploadProgress)),(e.cancelToken||e.signal)&&(n=function(t){w&&(r(!t||t.type?new ke(null,e,w):t),w.abort(),w=null)},e.cancelToken&&e.cancelToken.subscribe(n),e.signal&&(e.signal.aborted?n():e.signal.addEventListener(\"abort\",n)));var A,T=(A=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(S))&&A[1]||\"\";T&&-1===ge.protocols.indexOf(T)?r(new Y(\"Unsupported protocol \"+T+\":\",Y.ERR_BAD_REQUEST,e)):w.send(a||null)}))}};Q.forEach(Ue,(function(e,t){if(e){try{Object.defineProperty(e,\"name\",{value:t})}catch(e){}Object.defineProperty(e,\"adapterName\",{value:t})}}));var De=function(e){return\"- \".concat(e)},Be=function(e){return Q.isFunction(e)||null===e||!1===e},Ie=function(e){for(var t,r,n=(e=Q.isArray(e)?e:[e]).length,o={},i=0;i<n;i++){var a=void 0;if(r=t=e[i],!Be(t)&&void 0===(r=Ue[(a=String(t)).toLowerCase()]))throw new Y(\"Unknown adapter '\".concat(a,\"'\"));if(r)break;o[a||\"#\"+i]=r}if(!r){var s=Object.entries(o).map((function(e){var t=f(e,2),r=t[0],n=t[1];return\"adapter \".concat(r,\" \")+(!1===n?\"is not supported by the environment\":\"is not available in the build\")}));throw new Y(\"There is no suitable adapter to dispatch the request \"+(n?s.length>1?\"since :\\n\"+s.map(De).join(\"\\n\"):\" \"+De(s[0]):\"as no adapter specified\"),\"ERR_NOT_SUPPORT\")}return r};function qe(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new ke(null,e)}function ze(e){return qe(e),e.headers=xe.from(e.headers),e.data=Pe.call(e,e.transformRequest),-1!==[\"post\",\"put\",\"patch\"].indexOf(e.method)&&e.headers.setContentType(\"application/x-www-form-urlencoded\",!1),Ie(e.adapter||Ee.adapter)(e).then((function(t){return qe(e),t.data=Pe.call(e,e.transformResponse,t),t.headers=xe.from(t.headers),t}),(function(t){return Ne(t)||(qe(e),t&&t.response&&(t.response.data=Pe.call(e,e.transformResponse,t.response),t.response.headers=xe.from(t.response.headers))),Promise.reject(t)}))}var Me=function(e){return e instanceof xe?t({},e):e};function He(e,t){t=t||{};var r={};function n(e,t,r){return Q.isPlainObject(e)&&Q.isPlainObject(t)?Q.merge.call({caseless:r},e,t):Q.isPlainObject(t)?Q.merge({},t):Q.isArray(t)?t.slice():t}function o(e,t,r){return Q.isUndefined(t)?Q.isUndefined(e)?void 0:n(void 0,e,r):n(e,t,r)}function i(e,t){if(!Q.isUndefined(t))return n(void 0,t)}function a(e,t){return Q.isUndefined(t)?Q.isUndefined(e)?void 0:n(void 0,e):n(void 0,t)}function s(r,o,i){return i in t?n(r,o):i in e?n(void 0,r):void 0}var u={url:i,method:i,data:i,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:s,headers:function(e,t){return o(Me(e),Me(t),!0)}};return Q.forEach(Object.keys(Object.assign({},e,t)),(function(n){var i=u[n]||o,a=i(e[n],t[n],n);Q.isUndefined(a)&&i!==s||(r[n]=a)})),r}var Je=\"1.6.8\",Ge={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach((function(e,t){Ge[e]=function(r){return o(r)===e||\"a\"+(t<1?\"n \":\" \")+e}}));var We={};Ge.transitional=function(e,t,r){function n(e,t){return\"[Axios v1.6.8] Transitional option '\"+e+\"'\"+t+(r?\". \"+r:\"\")}return function(r,o,i){if(!1===e)throw new Y(n(o,\" has been removed\"+(t?\" in \"+t:\"\")),Y.ERR_DEPRECATED);return t&&!We[o]&&(We[o]=!0,console.warn(n(o,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(r,o,i)}};var Ke={assertOptions:function(e,t,r){if(\"object\"!==o(e))throw new Y(\"options must be an object\",Y.ERR_BAD_OPTION_VALUE);for(var n=Object.keys(e),i=n.length;i-- >0;){var a=n[i],s=t[a];if(s){var u=e[a],c=void 0===u||s(u,a,e);if(!0!==c)throw new Y(\"option \"+a+\" must be \"+c,Y.ERR_BAD_OPTION_VALUE)}else if(!0!==r)throw new Y(\"Unknown option \"+a,Y.ERR_BAD_OPTION)}},validators:Ge},Ve=Ke.validators,Xe=function(){function e(t){a(this,e),this.defaults=t,this.interceptors={request:new he,response:new he}}var t,n;return u(e,[{key:\"request\",value:(t=r().mark((function e(t,n){var o,i;return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this._request(t,n);case 3:return e.abrupt(\"return\",e.sent);case 6:throw e.prev=6,e.t0=e.catch(0),e.t0 instanceof Error&&(Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error,i=o.stack?o.stack.replace(/^.+\\n/,\"\"):\"\",e.t0.stack?i&&!String(e.t0.stack).endsWith(i.replace(/^.+\\n.+\\n/,\"\"))&&(e.t0.stack+=\"\\n\"+i):e.t0.stack=i),e.t0;case 10:case\"end\":return e.stop()}}),e,this,[[0,6]])})),n=function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function s(e){i(a,n,o,s,u,\"next\",e)}function u(e){i(a,n,o,s,u,\"throw\",e)}s(void 0)}))},function(e,t){return n.apply(this,arguments)})},{key:\"_request\",value:function(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{};var r=t=He(this.defaults,t),n=r.transitional,o=r.paramsSerializer,i=r.headers;void 0!==n&&Ke.assertOptions(n,{silentJSONParsing:Ve.transitional(Ve.boolean),forcedJSONParsing:Ve.transitional(Ve.boolean),clarifyTimeoutError:Ve.transitional(Ve.boolean)},!1),null!=o&&(Q.isFunction(o)?t.paramsSerializer={serialize:o}:Ke.assertOptions(o,{encode:Ve.function,serialize:Ve.function},!0)),t.method=(t.method||this.defaults.method||\"get\").toLowerCase();var a=i&&Q.merge(i.common,i[t.method]);i&&Q.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(e){delete i[e]})),t.headers=xe.concat(a,i);var s=[],u=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(u=u&&e.synchronous,s.unshift(e.fulfilled,e.rejected))}));var c,f=[];this.interceptors.response.forEach((function(e){f.push(e.fulfilled,e.rejected)}));var l,h=0;if(!u){var p=[ze.bind(this),void 0];for(p.unshift.apply(p,s),p.push.apply(p,f),l=p.length,c=Promise.resolve(t);h<l;)c=c.then(p[h++],p[h++]);return c}l=s.length;var d=t;for(h=0;h<l;){var y=s[h++],v=s[h++];try{d=y(d)}catch(e){v.call(this,e);break}}try{c=ze.call(this,d)}catch(e){return Promise.reject(e)}for(h=0,l=f.length;h<l;)c=c.then(f[h++],f[h++]);return c}},{key:\"getUri\",value:function(e){return fe(Le((e=He(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}]),e}();Q.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){Xe.prototype[e]=function(t,r){return this.request(He(r||{},{method:e,url:t,data:(r||{}).data}))}})),Q.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(r,n,o){return this.request(He(o||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:r,data:n}))}}Xe.prototype[e]=t(),Xe.prototype[e+\"Form\"]=t(!0)}));var $e=Xe,Qe=function(){function e(t){if(a(this,e),\"function\"!=typeof t)throw new TypeError(\"executor must be a function.\");var r;this.promise=new Promise((function(e){r=e}));var n=this;this.promise.then((function(e){if(n._listeners){for(var t=n._listeners.length;t-- >0;)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},t((function(e,t,o){n.reason||(n.reason=new ke(e,t,o),r(n.reason))}))}return u(e,[{key:\"throwIfRequested\",value:function(){if(this.reason)throw this.reason}},{key:\"subscribe\",value:function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}},{key:\"unsubscribe\",value:function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}}}],[{key:\"source\",value:function(){var t;return{token:new e((function(e){t=e})),cancel:t}}}]),e}();var Ye={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Ye).forEach((function(e){var t=f(e,2),r=t[0],n=t[1];Ye[n]=r}));var Ze=Ye;var et=function e(t){var r=new $e(t),n=m($e.prototype.request,r);return Q.extend(n,$e.prototype,r,{allOwnKeys:!0}),Q.extend(n,r,null,{allOwnKeys:!0}),n.create=function(r){return e(He(t,r))},n}(Ee);return et.Axios=$e,et.CanceledError=ke,et.CancelToken=Qe,et.isCancel=Ne,et.VERSION=Je,et.toFormData=ie,et.AxiosError=Y,et.Cancel=et.CanceledError,et.all=function(e){return Promise.all(e)},et.spread=function(e){return function(t){return e.apply(null,t)}},et.isAxiosError=function(e){return Q.isObject(e)&&!0===e.isAxiosError},et.mergeConfig=He,et.AxiosHeaders=xe,et.formToJSON=function(e){return be(Q.isHTMLForm(e)?new FormData(e):e)},et.getAdapter=Ie,et.HttpStatusCode=Ze,et.default=et,et}));\n//# sourceMappingURL=axios.min.js.map\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 16170,
          "_error": null
        },
        "serverIPAddress": "104.18.187.31",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 3434.385000000475,
        "timings": {
          "blocked": 8.073000002185582,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.18799999999999972,
          "wait": 1186.2460000016104,
          "receive": 2239.877999996679,
          "_blocked_queueing": 4.853000002185581
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 129
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13869",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/general.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 589,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "1904"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"770-18e5e8d5945\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 21 Mar 2024 01:08:25 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1904,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "function showNotification(message, isSuccess = true) {\n  const notificationElement = document.createElement(\"div\");\n  notificationElement.innerHTML = message;\n  notificationElement.style.position = \"fixed\";\n  notificationElement.style.bottom = \"20px\"; // Изменено с top на bottom\n  notificationElement.style.left = \"50%\";\n  notificationElement.style.transform = \"translateX(-50%)\";\n  notificationElement.style.minWidth = \"300px\";\n  notificationElement.style.maxWidth = \"80%\";\n  notificationElement.style.padding = \"15px\";\n  notificationElement.style.backgroundColor = isSuccess\n    ? \"lightgreen\"\n    : \"#ff6347\";\n  notificationElement.style.color = \"white\";\n  notificationElement.style.borderRadius = \"5px\";\n  notificationElement.style.zIndex = \"1000\";\n  notificationElement.style.textAlign = \"center\";\n  notificationElement.style.boxShadow = \"0 2px 4px rgba(0, 0, 0, 0.2)\";\n  notificationElement.style.animation = \"fadeIn 0.5s, fadeOut 0.5s 2.5s\"; // Добавление анимации\n\n  document.body.appendChild(notificationElement);\n\n  // Анимация появления и исчезновения\n  notificationElement.style.opacity = \"0\";\n  setTimeout(() => {\n    notificationElement.style.opacity = \"1\";\n  }, 10);\n  setTimeout(() => {\n    notificationElement.style.opacity = \"0\";\n  }, 2500);\n\n  setTimeout(() => {\n    notificationElement.remove();\n  }, 3000);\n}\n\nwindow.showNotification = showNotification;\n\nfunction loadCart() {\n  const authToken = localStorage.getItem(\"authToken\");\n\n  if (!authToken) {\n    return;\n  }\n\n  axios\n    .get(baseUrl + \"/getCart\", {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then((response) => {\n      cart = response.data;\n      updateCartCount();\n    })\n    .catch((error) => {\n      console.error(\"Ошибка при загрузке корзины:\", error);\n    });\n}\n\nwindow.loadCart = loadCart;\n"
          },
          "redirectURL": "",
          "headersSize": 370,
          "bodySize": 1904,
          "_transferSize": 2274,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 43.42900000119698,
        "timings": {
          "blocked": 8.082000000841683,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.03500000000000014,
          "wait": 34.94600000014249,
          "receive": 0.3660000002128072,
          "_blocked_queueing": 4.935000000841683
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 130
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13843",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/authCheck.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 591,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "970"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"3ca-18e9174fee0\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:22:27 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 970,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", function () {\n  const authToken = localStorage.getItem(\"authToken\");\n\n  // Перехватываем клик по всем ссылкам, которые требуют авторизации\n  document.querySelectorAll(\".auth-dependent\").forEach((link) => {\n    link.addEventListener(\"click\", function (event) {\n      // Проверяем, авторизован ли пользователь\n      if (!authToken) {\n        event.preventDefault(); // Предотвращаем переход по ссылке\n        // Показываем сообщение о необходимости авторизации\n        const message = `Пожалуйста, <a href=\"/\" style=\"color: white; text-decoration: underline;\">войдите в систему</a>, чтобы получить доступ к этой функциональности.`;\n        showNotification(message, false);\n      }\n    });\n  });\n});\n"
          },
          "redirectURL": "",
          "headersSize": 369,
          "bodySize": 970,
          "_transferSize": 1339,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 46.35699999926146,
        "timings": {
          "blocked": 8.107999999664491,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.03200000000000003,
          "wait": 37.91900000057672,
          "receive": 0.29799999902024865,
          "_blocked_queueing": 4.995999999664491
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 131
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13869",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/cart-counter.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 594,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "1549"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"60d-18e5e8d5945\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 21 Mar 2024 01:08:25 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1549,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", () => {\n  const cartCountElement = document.getElementById(\"cart-count\");\n\n  updateCartCount(); // Инициализация при загрузке страницы\n\n  window.addEventListener(\"cartUpdated\", () => {\n    updateCartCount(); // Обновление при событии\n  });\n\n  function updateCartCount() {\n    const authToken = localStorage.getItem(\"authToken\");\n\n    if (!authToken) {\n      hideCartCount(); // Скрыть счетчик корзины\n      return;\n    }\n\n    axios\n      .get(baseUrl + \"/getCartCount\", {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        const { count } = response.data;\n        cartCountElement.textContent = `(${count})`; // Обновляем счетчик корзины\n        showCartCount(); // Показываем счетчик корзины\n      })\n      .catch((error) => {\n        console.error(\n          \"Ошибка при получении количества товаров в корзине:\",\n          error\n        );\n        hideCartCount(); // Скрыть счетчик корзины в случае ошибки\n      });\n  }\n\n  function showCartCount() {\n    // Показываем счетчик корзины\n    cartCountElement.style.opacity = \"1\";\n  }\n\n  function hideCartCount() {\n    // Скрываем счетчик корзины\n    cartCountElement.style.opacity = \"0\";\n  }\n\n  window.updateCartCount = updateCartCount;\n});\n"
          },
          "redirectURL": "",
          "headersSize": 370,
          "bodySize": 1549,
          "_transferSize": 1919,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 62.92300000131945,
        "timings": {
          "blocked": 43.72300000136881,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.05499999999999999,
          "wait": 18.76000000058161,
          "receive": 0.38499999936902896,
          "_blocked_queueing": 43.45100000136881
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 132
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13843",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/login.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 587,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "3816"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"ee8-18e917d4c64\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:31:31 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3816,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", () => {\n  // Элементы формы и кнопки\n  const loginForm = document.getElementById(\"login-form\");\n  const registerForm = document.getElementById(\"register-form\");\n  const loginButton = document.getElementById(\"login-button\");\n  const logoutButton = document.getElementById(\"logout-button\");\n\n  // Функция для отображения сообщений об ошибках\n  function displayErrorMessages(messages) {\n    showNotification(messages.join(\"\\n\"), false);\n  }\n\n  // Валидация имени пользователя\n  function isValidUsername(username) {\n    const usernameRegex = /^[a-zA-Z0-9_]{2,16}$/;\n    return usernameRegex.test(username);\n  }\n\n  // Валидация пароля\n  function isValidPassword(password) {\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    return passwordRegex.test(password);\n  }\n\n  // Функция отправки запроса на сервер\n  const sendAuthRequest = (url, username, password) => {\n    if (!isValidUsername(username) || !isValidPassword(password)) {\n      const errorMessages = [];\n      if (!isValidUsername(username)) {\n        errorMessages.push(\n          \"Логин должен содержать от 3 до 15 символов и может включать буквы, цифры и символы: _\"\n        );\n      }\n      if (!isValidPassword(password)) {\n        errorMessages.push(\n          \"Пароль должен содержать не менее 8 символов, включая минимум одну букву и одну цифру\"\n        );\n      }\n      displayErrorMessages(errorMessages);\n      return;\n    }\n\n    axios\n      .post(url, { username, password })\n      .then((response) => {\n        showNotification(response.data.message, true);\n        if (response.data.token) {\n          localStorage.setItem(\"authToken\", response.data.token);\n          localStorage.setItem(\"isLoggedIn\", \"true\");\n          window.location.href = \"/\"; // Обновление страницы\n        }\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", error);\n        showNotification(\"Произошла ошибка при обработке запроса\", false);\n      });\n  };\n\n  // Обработка формы входа\n  if (loginForm) {\n    loginForm.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const username = document.getElementById(\"login-username\").value;\n      const password = document.getElementById(\"login-password\").value;\n      sendAuthRequest(baseUrl + \"/login\", username, password);\n    });\n  }\n\n  // Обработка формы регистрации\n  if (registerForm) {\n    registerForm.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const username = document.getElementById(\"register-username\").value;\n      const password = document.getElementById(\"register-password\").value;\n      sendAuthRequest(baseUrl + \"/register\", username, password);\n    });\n  }\n\n  // Обработка события нажатия кнопки \"Выйти\"\n  if (logoutButton) {\n    logoutButton.addEventListener(\"click\", () => {\n      localStorage.removeItem(\"isLoggedIn\");\n      localStorage.removeItem(\"authToken\"); // Удаление токена\n      window.location.reload(); // Обновление страницы\n    });\n  }\n\n  // Обновление состояния кнопок входа/выхода\n  const updateAuthButtons = () => {\n    if (localStorage.getItem(\"isLoggedIn\") === \"true\") {\n      loginButton.style.display = \"none\";\n      logoutButton.style.display = \"block\";\n    } else {\n      loginButton.style.display = \"block\";\n      logoutButton.style.display = \"none\";\n    }\n  };\n\n  updateAuthButtons();\n});\n"
          },
          "redirectURL": "",
          "headersSize": 370,
          "bodySize": 3816,
          "_transferSize": 4186,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 65.35199999780161,
        "timings": {
          "blocked": 46.7740000004489,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.069,
          "wait": 18.168999998665882,
          "receive": 0.33999999868683517,
          "_blocked_queueing": 46.3820000004489
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 133
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13836",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/app.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 585,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "7464"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"1d28-18e9174fee0\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:22:27 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7464,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", function () {\n  document\n    .getElementById(\"apply-filters\")\n    .addEventListener(\"click\", applyFilters);\n  document\n    .getElementById(\"reset-filters\")\n    .addEventListener(\"click\", resetFilters);\n\n  let products = [];\n  let filteredProducts = [];\n\n  const sortOrderSelect = document.getElementById(\"sort-order\");\n  sortOrderSelect.value = \"name-asc\";\n\n  const productsPerPage = 5;\n  let currentPage = 1;\n  const productList = document.getElementById(\"product-list\");\n  const paginationElement = document.getElementById(\"pagination\");\n\n  sortOrderSelect.addEventListener(\"change\", function () {\n    sortAndDisplayProducts();\n  });\n\n  fetch(baseUrl + \"/products\")\n    .then((response) => response.json())\n    .then((data) => {\n      products = data.sort((a, b) => a.name.localeCompare(b.name));\n      filteredProducts = [...products];\n      displayProducts(filteredProducts, 1);\n    })\n    .catch((error) =>\n      console.error(\"Ошибка при получении данных с сервера:\", error)\n    );\n\n  function displayProducts(productsToDisplay, page) {\n    const startIndex = (page - 1) * productsPerPage;\n    const endIndex = startIndex + productsPerPage;\n    const productsToShow = productsToDisplay.slice(startIndex, endIndex);\n\n    productList.innerHTML = productsToShow\n      .map(\n        (product) => `\n        <div>\n          <img src=\"${product.imageUrl}\" alt=\"${\n          product.name\n        }\" style=\"width:100px;height:100px;\">\n          <h2>${product.name}</h2>\n          <p>${product.description}</p>\n          <p>Цена: ${product.price} USD</p>\n          <p>Категория: ${product.category}</p>\n          <p>Производитель: ${product.manufacturer}</p>\n          <p>Бесплатная доставка: ${product.freeShipping ? \"Да\" : \"Нет\"}</p>\n          <input type=\"number\" id=\"quantity-${\n            product.product_id\n          }\" min=\"1\" value=\"1\" style=\"width: 50px;\">\n          <button class=\"add-to-cart-button\" data-product-id=\"${\n            product.product_id\n          }\">Добавить в корзину</button>\n        </div>\n      `\n      )\n      .join(\"\");\n\n    // Привязываем обработчики событий к кнопкам после того, как они добавлены в DOM\n    productsToShow.forEach((product) => {\n      const button = document.querySelector(\n        `button[data-product-id=\"${product.product_id}\"]`\n      );\n      const quantityInput = document.getElementById(\n        `quantity-${product.product_id}`\n      );\n      button.addEventListener(\"click\", function () {\n        let quantity = parseInt(quantityInput.value, 10);\n        quantity = !isNaN(quantity) && quantity > 0 ? quantity : 1;\n        addToCart(product.product_id, quantity);\n      });\n    });\n\n    displayPaginationButtons(productsToDisplay.length, page);\n  }\n\n  function addToCart(productId, quantity) {\n    const authToken = localStorage.getItem(\"authToken\");\n    if (!authToken) {\n      showNotification(\n        \"Пожалуйста, войдите в систему, чтобы добавить товар в корзину\"\n      );\n      return;\n    }\n\n    if (quantity <= 0) {\n      showNotification(\"Количество должно быть больше 0\");\n      return;\n    }\n\n    axios\n      .post(\n        baseUrl + \"/cart\",\n        { productId, quantity },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      )\n      .then(() => {\n        showNotification(\"Товар добавлен в корзину\");\n        loadCart(); // Предполагается, что эта функция обновляет отображение корзины на странице\n        const event = new CustomEvent(\"cartUpdated\");\n        window.dispatchEvent(event);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка при добавлении товара в корзину:\", error);\n        showNotification(\"Ошибка при добавлении товара в корзину\");\n      });\n  }\n\n  function displayPaginationButtons(totalProducts, currentPage) {\n    paginationElement.innerHTML = \"\";\n    const totalPages = Math.ceil(totalProducts / productsPerPage);\n\n    for (let i = 1; i <= totalPages; i++) {\n      const button = document.createElement(\"button\");\n      button.innerText = i;\n      button.onclick = () => {\n        displayProducts(filteredProducts, i);\n      };\n      if (i === currentPage) {\n        button.classList.add(\"active\");\n      }\n      paginationElement.appendChild(button);\n    }\n  }\n\n  displayProducts(products, currentPage);\n\n  function sortProducts(products, sortOrder) {\n    let sortedProducts = [...products];\n    switch (sortOrder) {\n      case \"name-asc\":\n        return sortedProducts.sort((a, b) => a.name.localeCompare(b.name));\n      case \"name-desc\":\n        return sortedProducts.sort((a, b) => b.name.localeCompare(a.name));\n      case \"price-asc\":\n        return sortedProducts.sort((a, b) => b.price - a.price);\n      case \"price-desc\":\n        return sortedProducts.sort((a, b) => a.price - b.price);\n      default:\n        return sortedProducts;\n    }\n  }\n\n  function sortAndDisplayProducts() {\n    filteredProducts = sortProducts(filteredProducts, sortOrderSelect.value);\n    displayProducts(filteredProducts, 1);\n  }\n\n  sortAndDisplayProducts();\n\n  function applyFilters() {\n    let baseUrl = window.baseUrl || \"http://127.0.0.1:3000\";\n    const minPrice = document.getElementById(\"min-price\").value;\n    const maxPrice = document.getElementById(\"max-price\").value;\n    const selectedCategory = document.getElementById(\"category\").value;\n    const selectedManufacturer = document.getElementById(\"manufacturer\").value;\n    const freeShipping = document.getElementById(\"free-shipping\").checked;\n\n    let url = new URL(baseUrl + \"/products/filter\");\n\n    if (selectedCategory) {\n      url.searchParams.append(\"category\", selectedCategory);\n    }\n    if (selectedManufacturer) {\n      url.searchParams.append(\"manufacturer\", selectedManufacturer);\n    }\n    if (freeShipping) {\n      url.searchParams.append(\"freeShipping\", freeShipping.toString());\n    }\n    if (minPrice) {\n      url.searchParams.append(\"minPrice\", minPrice);\n    }\n    if (maxPrice) {\n      url.searchParams.append(\"maxPrice\", maxPrice);\n    }\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        filteredProducts = [...data];\n        sortAndDisplayProducts();\n      })\n      .catch((error) =>\n        console.error(\"Ошибка при фильтрации продуктов:\", error)\n      );\n  }\n\n  function resetFilters() {\n    document.getElementById(\"min-price\").value = \"\";\n    document.getElementById(\"max-price\").value = \"\";\n    document.getElementById(\"category\").value = \"\";\n    document.getElementById(\"manufacturer\").value = \"\";\n    document.getElementById(\"free-shipping\").checked = false;\n\n    fetch(baseUrl + \"/products\")\n      .then((response) => response.json())\n      .then((data) => {\n        products = data.sort((a, b) => a.name.localeCompare(b.name));\n        filteredProducts = [...products];\n        displayProducts(filteredProducts, 1);\n      })\n      .catch((error) =>\n        console.error(\"Ошибка при получении данных с сервера:\", error)\n      );\n  }\n});\n"
          },
          "redirectURL": "",
          "headersSize": 371,
          "bodySize": 7464,
          "_transferSize": 7835,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 70.48299999951269,
        "timings": {
          "blocked": 52.74900000030175,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07599999999999996,
          "wait": 17.19200000152434,
          "receive": 0.4659999976865947,
          "_blocked_queueing": 52.24900000030175
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 134
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13850",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/orders.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 588,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "5875"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"16f3-18e9174fee4\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:22:27 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5875,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", function () {\n  async function fetchUserOrders() {\n    try {\n      const authToken = localStorage.getItem(\"authToken\");\n      if (!authToken) {\n        console.error(\"Токен авторизации не найден.\");\n        displayNoOrdersMessage();\n        return [];\n      }\n\n      const response = await fetch(\"/user-orders\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      if (response.status === 404) {\n        displayNoOrdersMessage();\n        return []; // Возвращаем пустой массив, чтобы вызывающий код мог корректно обработать этот случай\n      }\n\n      if (!response.ok) {\n        throw new Error(\"Ошибка при получении информации о заказах.\");\n      }\n\n      const orders = await response.json();\n      if (orders.length === 0) {\n        displayNoOrdersMessage();\n      } else {\n        displayOrders(orders); // Отображаем заказы, если они есть\n      }\n      return orders; // Возвращаем заказы для дальнейшей обработки\n    } catch (error) {\n      console.error(\"Ошибка при получении информации о заказах:\", error);\n      displayNoOrdersMessage();\n      return []; // В случае ошибки также возвращаем пустой массив\n    }\n  }\n\n  // Инициализация: запрос информации о заказах при загрузке страницы\n  fetchUserOrders();\n\n  function displayNoOrdersMessage() {\n    const ordersContainer = document.getElementById(\"order-items-list\");\n    ordersContainer.innerHTML = \"<p>Заказы не найдены.</p>\";\n  }\n\n  async function deleteProductFromOrder(orderId, productId) {\n    try {\n      const authToken = localStorage.getItem(\"authToken\");\n      const response = await fetch(`/orders/${orderId}/products/${productId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"Ошибка при удалении продукта из заказа.\");\n      }\n      showNotification(\n        \"Продукт удален из заказа и перемещен в корзину.\",\n        false\n      );\n      fetchUserOrders(); // Повторный запрос информации о заказах после удаления продукта\n      updateTotalAmount();\n      updateCartCount();\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    }\n  }\n\n  async function changeProductQuantityInOrder(orderId, productId, quantity) {\n    try {\n      const authToken = localStorage.getItem(\"authToken\");\n      const response = await fetch(`/orders/${orderId}/products/${productId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${authToken}`,\n        },\n        body: JSON.stringify({ quantity }),\n      });\n      if (!response.ok) {\n        throw new Error(\"Ошибка при изменении количества продукта в заказе.\");\n      }\n      showNotification(\"Количество продукта обновлено в заказе.\");\n      fetchUserOrders(); // Повторный запрос информации о заказах после изменения количества продукта\n      updateTotalAmount();\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    }\n  }\n\n  function displayOrders(orders) {\n    const ordersContainer = document.getElementById(\"order-items-list\");\n    ordersContainer.innerHTML = \"\"; // Очищаем контейнер заказов\n\n    orders.forEach((order) => {\n      const orderElement = document.createElement(\"div\");\n      orderElement.className = \"order\";\n      let orderContent = `<h3>Заказ #${order.order_id}, Общая стоимость: ${order.total} USD</h3><ul>`;\n\n      order.items.forEach((item) => {\n        orderContent += `\n          <li style=\"display: flex; align-items: center; justify-content: space-between;\">\n            <div style=\"display: flex; align-items: center; gap: 10px;\">\n              <img src=\"${item.imageUrl}\" alt=\"${item.name}\" style=\"width: 50px; height: auto;\">\n              <span style=\"flex: 1;\">${item.name} - ${item.quantity} x ${item.price} USD</span>\n            </div>\n            <div style=\"display: flex; align-items: center; width: 70%;\">\n              <input class=\"quantity-input\" \n                     type=\"number\" \n                     value=\"${item.quantity}\" \n                     min=\"1\" \n                     onchange=\"changeProductQuantityInOrder(${order.order_id}, ${item.product_id}, Math.max(1, this.value))\"\n                     oninput=\"this.value = this.value.replace(/[^0-9]/g, '').replace(/^(0+)/, '');\"\n                     style=\"width: 10%; text-align: center;\">\n              <button class=\"delete-button\" \n                      onclick=\"deleteProductFromOrder(${order.order_id}, ${item.product_id})\" \n                      style=\"width: 150%; margin-left: 10px; padding: 5px 10px; background-color: #f44336; color: white; border-radius: 4px; cursor: pointer;\">Delete</button>\n            </div>\n          </li>`;\n      });\n\n      orderContent += \"</ul>\";\n      orderElement.innerHTML = orderContent;\n      ordersContainer.appendChild(orderElement);\n    });\n  }\n\n  // Доступ к функциям из глобальной области видимости\n  window.fetchUserOrders = fetchUserOrders;\n  window.deleteProductFromOrder = deleteProductFromOrder;\n  window.changeProductQuantityInOrder = changeProductQuantityInOrder;\n});\n"
          },
          "redirectURL": "",
          "headersSize": 371,
          "bodySize": 5875,
          "_transferSize": 6246,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 90.0419999998121,
        "timings": {
          "blocked": 59.41299999987753,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06499999999999995,
          "wait": 30.18499999895878,
          "receive": 0.3790000009757932,
          "_blocked_queueing": 58.63099999987753
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://qa.demoshopping.ru/payment",
          "lineNumber": 135
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "13812",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/js/payment.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 589,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "9922"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:44 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"26c2-18e9174fee4\""
            },
            {
              "name": "Last-Modified",
              "value": "Sat, 30 Mar 2024 22:22:27 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9922,
            "mimeType": "application/javascript",
            "compression": 0,
            "text": "document.addEventListener(\"DOMContentLoaded\", function () {\n  const paymentForm = document.getElementById(\"payment-form\");\n  const paymentMethodInputs = document.querySelectorAll(\n    'input[name=\"paymentMethod\"]'\n  );\n  const cardDetailsSection = document.getElementById(\"card-details\");\n  const paypalEmailSection = document.getElementById(\"paypal-email\");\n  const totalAmountElement = document.getElementById(\"total-price\");\n  const errorMessages = document.querySelectorAll(\".error-message\");\n\n  // Получаем доступ к элементам формы и сохраняем их в переменных\n  const cardNumberInput = document.getElementById(\"card-number\");\n  const expiryMonthInput = document.getElementById(\"card-expiry-month\");\n  const expiryYearInput = document.getElementById(\"card-expiry-year\");\n  const cvvInput = document.getElementById(\"card-cvv\");\n  const cardNameInput = document.getElementById(\"card-name\");\n  const cardSurnameInput = document.getElementById(\"card-surname\");\n  const paypalEmailInput = document.getElementById(\"paypal-email-input\");\n  const receiptEmailInput = document.getElementById(\"receipt-email\");\n\n  function hideErrorMessages() {\n    errorMessages.forEach((element) => (element.style.display = \"none\"));\n  }\n\n  function clearErrorHighlighting() {\n    document\n      .querySelectorAll(\".error\")\n      .forEach((element) => element.classList.remove(\"error\"));\n  }\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  function showError(input, message) {\n    const errorElement = input.nextElementSibling;\n    input.classList.add(\"error\");\n    if (errorElement && errorElement.classList.contains(\"error-message\")) {\n      errorElement.textContent = message;\n      errorElement.style.display = \"block\";\n    }\n  }\n\n  function validatePaymentForm() {\n    let valid = true;\n    const selectedPaymentMethod = document.querySelector(\n      'input[name=\"paymentMethod\"]:checked'\n    ).value;\n\n    clearErrorHighlighting();\n    hideErrorMessages();\n\n    if (selectedPaymentMethod !== \"Paypal\") {\n      if (!cardNumberInput.value.match(/^\\d{16}$/)) {\n        showError(cardNumberInput, \"Неверный номер карты.\");\n        valid = false;\n      }\n\n      if (\n        !(\n          parseInt(expiryMonthInput.value) >= 1 &&\n          parseInt(expiryMonthInput.value) <= 13\n        )\n      ) {\n        showError(\n          expiryMonthInput,\n          \"Месяц истечения срока должен быть числом от 1 до 12.\"\n        );\n        valid = false;\n      }\n\n      if (\n        !(\n          parseInt(expiryYearInput.value) >= 0 &&\n          parseInt(expiryYearInput.value) <= 99\n        )\n      ) {\n        showError(\n          expiryYearInput,\n          \"Год истечения срока должен быть числом от 0 до 99.\"\n        );\n        valid = false;\n      }\n\n      if (!cvvInput.value.match(/^\\d{3}$/)) {\n        showError(cvvInput, \"CVV должен состоять из 3 цифр.\");\n        valid = false;\n      }\n\n      if (!cardNameInput.value.match(/^[A-Za-zА-Яа-я]+$/)) {\n        showError(\n          cardNameInput,\n          \"Имя должно содержать только буквы латинского алфавита.\"\n        );\n        valid = false;\n      }\n\n      if (!cardSurnameInput.value.match(/^[A-Za-z]+$/)) {\n        showError(\n          cardSurnameInput,\n          \"Фамилия должна содержать только буквы латинского алфавита.\"\n        );\n        valid = false;\n      }\n    }\n\n    if (\n      selectedPaymentMethod === \"Paypal\" &&\n      !validateEmail(paypalEmailInput.value)\n    ) {\n      showError(paypalEmailInput, \"Укажите действующий emil аккаунта PayPal.\");\n      valid = false;\n    }\n\n    if (!validateEmail(receiptEmailInput.value)) {\n      showError(\n        receiptEmailInput,\n        \"Укажите действующий email для отправки счета.\"\n      );\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  paymentMethodInputs.forEach((input) => {\n    input.addEventListener(\"change\", function () {\n      cardDetailsSection.style.display =\n        this.value === \"Paypal\" ? \"none\" : \"block\";\n      paypalEmailSection.style.display =\n        this.value === \"Paypal\" ? \"block\" : \"none\";\n\n      // При изменении метода оплаты скрываем или показываем соответствующие поля валидации\n      if (this.value === \"Paypal\") {\n        // Если выбран PayPal, отключаем валидацию для деталей карты\n        cardNumberInput.removeAttribute(\"required\");\n        expiryMonthInput.removeAttribute(\"required\");\n        expiryYearInput.removeAttribute(\"required\");\n        cvvInput.removeAttribute(\"required\");\n        cardNameInput.removeAttribute(\"required\");\n        cardSurnameInput.removeAttribute(\"required\");\n      } else {\n        // Если выбрана оплата картой, включаем валидацию для деталей карты\n        cardNumberInput.setAttribute(\"required\", true);\n        expiryMonthInput.setAttribute(\"required\", true);\n        expiryYearInput.setAttribute(\"required\", true);\n        cvvInput.setAttribute(\"required\", true);\n        cardNameInput.setAttribute(\"required\", true);\n        cardSurnameInput.setAttribute(\"required\", true);\n      }\n    });\n  });\n\n  const checkoutButton = document.getElementById(\"checkout-button\");\n  checkoutButton.addEventListener(\"click\", function (event) {\n    event.preventDefault(); // Предотвращаем отправку формы по умолчанию\n\n    // Проверяем валидацию формы\n    if (validatePaymentForm()) {\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n        const formData = new FormData(paymentForm);\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"/pay\");\n        xhr.setRequestHeader(\"Authorization\", `Bearer ${authToken}`);\n        xhr.setRequestHeader(\n          \"Content-Type\",\n          \"application/x-www-form-urlencoded\"\n        ); // Установка заголовка Content-Type\n\n        // Добавляем параметры в зависимости от выбранного метода оплаты\n        const selectedPaymentMethod = document.querySelector(\n          'input[name=\"paymentMethod\"]:checked'\n        ).value;\n        if (selectedPaymentMethod === \"Paypal\") {\n          formData.append(\"card_type\", \"Paypal\");\n          formData.append(\"email_paypal\", paypalEmailInput.value); // Добавляем параметр email_paypal для PayPal\n        } else {\n          if (selectedPaymentMethod === \"VISA\") {\n            formData.append(\"card_type\", \"VISA\");\n          } else if (selectedPaymentMethod === \"MasterCard\") {\n            formData.append(\"card_type\", \"MasterCard\");\n          }\n          formData.append(\"card_code\", cardNumberInput.value);\n          formData.append(\"expiry_month\", expiryMonthInput.value);\n          formData.append(\"expiry_year\", expiryYearInput.value);\n          formData.append(\"cvv\", cvvInput.value);\n        }\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status === 200) {\n              // Если запрос прошел успешно, перенаправляем пользователя на страницу успешной оплаты\n              window.location.href = \"/history\";\n            } else {\n              // Если возникла ошибка, выводим сообщение об ошибке\n              showNotification(xhr.responseText);\n            }\n          }\n        };\n        xhr.send(new URLSearchParams(formData)); // Преобразование FormData в URLSearchParams для отправки\n      } catch (error) {\n        console.error(\"Ошибка при отправке данных на сервер:\", error);\n        // Выводим сообщение об ошибке\n        showNotification(\"Произошла ошибка. Попробуйте еще раз.\");\n      }\n    }\n  });\n\n  // Обновление общей стоимости заказа\n  async function updateTotalAmount() {\n    try {\n      const orders = await window.fetchUserOrders();\n\n      if (!orders || orders.length === 0) {\n        totalAmountElement.textContent = \"0 USD\";\n        return;\n      }\n\n      let totalAmount = 0;\n      let hasPaidShipping = false; // Flag for paid shipping presence\n\n      orders.forEach((order) => {\n        // Check each product in each order\n        order.items.forEach((item) => {\n          totalAmount += item.quantity * item.price; // Sum up the cost of products\n          if (!item.freeShipping) {\n            // If the product does not have free shipping\n            hasPaidShipping = true; // Set the flag for paid shipping\n          }\n        });\n      });\n\n      // If there is at least one product with paid shipping across all orders, add shipping cost\n      if (hasPaidShipping) {\n        totalAmount += 6;\n      }\n\n      // Display the total amount with consideration for shipping\n      totalAmountElement.textContent =\n        `${totalAmount.toFixed(2)} USD` +\n        (hasPaidShipping ? \"  с учетом доставки\" : \"\");\n    } catch (error) {\n      console.error(\"Ошибка при обновлении общей стоимости:\", error);\n      totalAmountElement.textContent = \"Ошибка при расчете\";\n    }\n  }\n\n  updateTotalAmount();\n  window.updateTotalAmount = updateTotalAmount;\n});\n"
          },
          "redirectURL": "",
          "headersSize": 371,
          "bodySize": 9922,
          "_transferSize": 10293,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:00:58.851Z",
        "time": 91.41599999929895,
        "timings": {
          "blocked": 59.530000000337836,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.03300000000000003,
          "wait": 31.446999999758788,
          "receive": 0.4059999992023222,
          "_blocked_queueing": 58.94400000033784
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 32215
              },
              {
                "functionName": "xhr",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 29330
              },
              {
                "functionName": "ze",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 33419
              },
              {
                "functionName": "value",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 37874
              },
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 36052
              },
              {
                "functionName": "h",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 1436
              },
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 2767
              },
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 1846
              },
              {
                "functionName": "i",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 7913
              },
              {
                "functionName": "s",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 36545
              },
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 36604
              },
              {
                "functionName": "n",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 36485
              },
              {
                "functionName": "u.value",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 36641
              },
              {
                "functionName": "Q.forEach.Xe.<computed>",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 38201
              },
              {
                "functionName": "",
                "scriptId": "30",
                "url": "https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js",
                "lineNumber": 0,
                "columnNumber": 9950
              },
              {
                "functionName": "updateCartCount",
                "scriptId": "25",
                "url": "https://qa.demoshopping.ru/js/cart-counter.js",
                "lineNumber": 18,
                "columnNumber": 7
              },
              {
                "functionName": "",
                "scriptId": "25",
                "url": "https://qa.demoshopping.ru/js/cart-counter.js",
                "lineNumber": 3,
                "columnNumber": 2
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "connection": "13812",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/getCartCount",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzM3LCJpYXQiOjE3MTUyNjgwODUsImV4cCI6MTcyMzkwODA4NX0.L1kMXXZv6nidQvC27pWth2ZaI3Qnus865RZhXQ4SG8Y"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 778,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "13"
            },
            {
              "name": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:47 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"d-Um2177I53i+fvPtvNMD7a7JLuDI\""
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"count\":\"2\"}"
          },
          "redirectURL": "",
          "headersSize": 274,
          "bodySize": 13,
          "_transferSize": 287,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:01:02.292Z",
        "time": 32.76199999891105,
        "timings": {
          "blocked": 0.5869999986919574,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.04600000000000001,
          "wait": 31.93900000138092,
          "receive": 0.1899999988381751,
          "_blocked_queueing": 0.38299999869195744
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchUserOrders",
                "scriptId": "28",
                "url": "https://qa.demoshopping.ru/js/orders.js",
                "lineNumber": 10,
                "columnNumber": 29
              },
              {
                "functionName": "",
                "scriptId": "28",
                "url": "https://qa.demoshopping.ru/js/orders.js",
                "lineNumber": 41,
                "columnNumber": 2
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "13850",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/user-orders",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzM3LCJpYXQiOjE3MTUyNjgwODUsImV4cCI6MTcyMzkwODA4NX0.L1kMXXZv6nidQvC27pWth2ZaI3Qnus865RZhXQ4SG8Y"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 747,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "Not Found",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:47 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"21-kd+M7SteTAZjBO+diZSCs3Yhs74\""
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 33,
            "mimeType": "text/html",
            "compression": -30,
            "text": "Заказы не найдены."
          },
          "redirectURL": "",
          "headersSize": 307,
          "bodySize": 63,
          "_transferSize": 370,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:01:02.293Z",
        "time": 30.246999998780666,
        "timings": {
          "blocked": 0.7829999991112855,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.062,
          "wait": 29.042999998188346,
          "receive": 0.3590000014810357,
          "_blocked_queueing": 0.35199999911128543
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchUserOrders",
                "scriptId": "28",
                "url": "https://qa.demoshopping.ru/js/orders.js",
                "lineNumber": 10,
                "columnNumber": 29
              },
              {
                "functionName": "updateTotalAmount",
                "scriptId": "29",
                "url": "https://qa.demoshopping.ru/js/payment.js",
                "lineNumber": 214,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "29",
                "url": "https://qa.demoshopping.ru/js/payment.js",
                "lineNumber": 250,
                "columnNumber": 2
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "13876",
        "pageref": "page_2",
        "request": {
          "method": "GET",
          "url": "https://qa.demoshopping.ru/user-orders",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "ru-RU,ru;q=0.9"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzM3LCJpYXQiOjE3MTUyNjgwODUsImV4cCI6MTcyMzkwODA4NX0.L1kMXXZv6nidQvC27pWth2ZaI3Qnus865RZhXQ4SG8Y"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "qa.demoshopping.ru"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "https://qa.demoshopping.ru/payment"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 747,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "Not Found",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "Date",
              "value": "Thu, 09 May 2024 16:01:47 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"21-kd+M7SteTAZjBO+diZSCs3Yhs74\""
            },
            {
              "name": "Server",
              "value": "nginx/1.24.0 (Ubuntu)"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "name": "X-Powered-By",
              "value": "Express"
            }
          ],
          "cookies": [],
          "content": {
            "size": 33,
            "mimeType": "text/html",
            "compression": -30,
            "text": "Заказы не найдены."
          },
          "redirectURL": "",
          "headersSize": 307,
          "bodySize": 63,
          "_transferSize": 370,
          "_error": null
        },
        "serverIPAddress": "185.251.91.112",
        "startedDateTime": "2024-05-09T16:01:02.293Z",
        "time": 52.28200000055949,
        "timings": {
          "blocked": 0.6380000018093269,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.03300000000000003,
          "wait": 51.239000000144124,
          "receive": 0.37199999860604294,
          "_blocked_queueing": 0.27400000180932693
        }
      }
    ]
  }
}
